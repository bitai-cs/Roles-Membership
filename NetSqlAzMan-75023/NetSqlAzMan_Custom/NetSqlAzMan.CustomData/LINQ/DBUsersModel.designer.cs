#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetSqlAzMan.CustomDataLayer.LINQ {
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;


	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "AzManLdap")]
	public partial class DBUsersModelDataContext : System.Data.Linq.DataContext {

		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

		#region Extensibility Method Definitions
		partial void OnCreated();
		partial void Insertidentity_User(identity_User instance);
		partial void Updateidentity_User(identity_User instance);
		partial void Deleteidentity_User(identity_User instance);
		partial void Insertidentity_UserBranchOffice(identity_UserBranchOffice instance);
		partial void Updateidentity_UserBranchOffice(identity_UserBranchOffice instance);
		partial void Deleteidentity_UserBranchOffice(identity_UserBranchOffice instance);
		partial void Insertidentity_Department(identity_Department instance);
		partial void Updateidentity_Department(identity_Department instance);
		partial void Deleteidentity_Department(identity_Department instance);
		partial void Insertidentity_BranchOffice(identity_BranchOffice instance);
		partial void Updateidentity_BranchOffice(identity_BranchOffice instance);
		partial void Deleteidentity_BranchOffice(identity_BranchOffice instance);
		#endregion

		public DBUsersModelDataContext() :
				base("data source=.\\SQL2K14;initial catalog=AzMan_MS_CI_AI;user id=secman;password=secman;", mappingSource) {
			OnCreated();
		}

		public DBUsersModelDataContext(string connection) :
				base(connection, mappingSource) {
			OnCreated();
		}

		public DBUsersModelDataContext(System.Data.IDbConnection connection) :
				base(connection, mappingSource) {
			OnCreated();
		}

		public DBUsersModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource) {
			OnCreated();
		}

		public DBUsersModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource) {
			OnCreated();
		}

		public System.Data.Linq.Table<identity_User> identity_Users {
			get {
				return this.GetTable<identity_User>();
			}
		}

		public System.Data.Linq.Table<identity_UserBranchOffice> identity_UserBranchOffices {
			get {
				return this.GetTable<identity_UserBranchOffice>();
			}
		}

		public System.Data.Linq.Table<identity_Department> identity_Departments {
			get {
				return this.GetTable<identity_Department>();
			}
		}

		public System.Data.Linq.Table<identity_BranchOffice> identity_BranchOffices {
			get {
				return this.GetTable<identity_BranchOffice>();
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.identity_User")]
	public partial class identity_User : INotifyPropertyChanging, INotifyPropertyChanged {

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _UserID;

		private string _UserName;

		private System.Data.Linq.Binary _Password;

		private string _PasswordHash;

		private string _FirstName;

		private string _LastName;

		private string _FullName;

		private string _Mail;

		private System.Nullable<int> _DepartmentId;

		private bool _Enabled;

		private System.Data.Linq.Binary _RecordVersion;

		private EntitySet<identity_UserBranchOffice> _identity_UserBranchOffices;

		private EntityRef<identity_Department> _identity_Department;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnUserIDChanging(int value);
		partial void OnUserIDChanged();
		partial void OnUserNameChanging(string value);
		partial void OnUserNameChanged();
		partial void OnPasswordChanging(System.Data.Linq.Binary value);
		partial void OnPasswordChanged();
		partial void OnPasswordHashChanging(string value);
		partial void OnPasswordHashChanged();
		partial void OnFirstNameChanging(string value);
		partial void OnFirstNameChanged();
		partial void OnLastNameChanging(string value);
		partial void OnLastNameChanged();
		partial void OnFullNameChanging(string value);
		partial void OnFullNameChanged();
		partial void OnMailChanging(string value);
		partial void OnMailChanged();
		partial void OnDepartmentIdChanging(System.Nullable<int> value);
		partial void OnDepartmentIdChanged();
		partial void OnEnabledChanging(bool value);
		partial void OnEnabledChanged();
		partial void OnRecordVersionChanging(System.Data.Linq.Binary value);
		partial void OnRecordVersionChanged();
		#endregion

		public identity_User() {
			this._identity_UserBranchOffices = new EntitySet<identity_UserBranchOffice>(new Action<identity_UserBranchOffice>(this.attach_identity_UserBranchOffices), new Action<identity_UserBranchOffice>(this.detach_identity_UserBranchOffices));
			this._identity_Department = default(EntityRef<identity_Department>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true, UpdateCheck = UpdateCheck.Never)]
		public int UserID {
			get {
				return this._UserID;
			}
			set {
				if ((this._UserID != value)) {
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserName", DbType = "NVarChar(255) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
		public string UserName {
			get {
				return this._UserName;
			}
			set {
				if ((this._UserName != value)) {
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Password", DbType = "VarBinary(50) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary Password {
			get {
				return this._Password;
			}
			set {
				if ((this._Password != value)) {
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PasswordHash", DbType = "NVarChar(2048)", UpdateCheck = UpdateCheck.Never)]
		public string PasswordHash {
			get {
				return this._PasswordHash;
			}
			set {
				if ((this._PasswordHash != value)) {
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FirstName", DbType = "NVarChar(150) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
		public string FirstName {
			get {
				return this._FirstName;
			}
			set {
				if ((this._FirstName != value)) {
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastName", DbType = "NVarChar(150) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
		public string LastName {
			get {
				return this._LastName;
			}
			set {
				if ((this._LastName != value)) {
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FullName", AutoSync = AutoSync.Always, DbType = "NVarChar(301) NOT NULL", CanBeNull = false, IsDbGenerated = true, UpdateCheck = UpdateCheck.Never)]
		public string FullName {
			get {
				return this._FullName;
			}
			set {
				if ((this._FullName != value)) {
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mail", DbType = "NVarChar(255)", UpdateCheck = UpdateCheck.Never)]
		public string Mail {
			get {
				return this._Mail;
			}
			set {
				if ((this._Mail != value)) {
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DepartmentId", DbType = "Int", UpdateCheck = UpdateCheck.Never)]
		public System.Nullable<int> DepartmentId {
			get {
				return this._DepartmentId;
			}
			set {
				if ((this._DepartmentId != value)) {
					if (this._identity_Department.HasLoadedOrAssignedValue) {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Enabled", DbType = "Bit NOT NULL", UpdateCheck = UpdateCheck.Never)]
		public bool Enabled {
			get {
				return this._Enabled;
			}
			set {
				if ((this._Enabled != value)) {
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RecordVersion", AutoSync = AutoSync.Always, DbType = "rowversion NOT NULL", CanBeNull = false, IsDbGenerated = true, IsVersion = true, UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary RecordVersion {
			get {
				return this._RecordVersion;
			}
			set {
				if ((this._RecordVersion != value)) {
					this.OnRecordVersionChanging(value);
					this.SendPropertyChanging();
					this._RecordVersion = value;
					this.SendPropertyChanged("RecordVersion");
					this.OnRecordVersionChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "identity_User_identity_UserBranchOffice", Storage = "_identity_UserBranchOffices", ThisKey = "UserID", OtherKey = "UserID")]
		public EntitySet<identity_UserBranchOffice> identity_UserBranchOffices {
			get {
				return this._identity_UserBranchOffices;
			}
			set {
				this._identity_UserBranchOffices.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "identity_Department_identity_User", Storage = "_identity_Department", ThisKey = "DepartmentId", OtherKey = "DepartmentId", IsForeignKey = true)]
		public identity_Department identity_Department {
			get {
				return this._identity_Department.Entity;
			}
			set {
				identity_Department previousValue = this._identity_Department.Entity;
				if (((previousValue != value)
							|| (this._identity_Department.HasLoadedOrAssignedValue == false))) {
					this.SendPropertyChanging();
					if ((previousValue != null)) {
						this._identity_Department.Entity = null;
						previousValue.identity_Users.Remove(this);
					}
					this._identity_Department.Entity = value;
					if ((value != null)) {
						value.identity_Users.Add(this);
						this._DepartmentId = value.DepartmentId;
					}
					else {
						this._DepartmentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("identity_Department");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging() {
			if ((this.PropertyChanging != null)) {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName) {
			if ((this.PropertyChanged != null)) {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_identity_UserBranchOffices(identity_UserBranchOffice entity) {
			this.SendPropertyChanging();
			entity.identity_User = this;
		}

		private void detach_identity_UserBranchOffices(identity_UserBranchOffice entity) {
			this.SendPropertyChanging();
			entity.identity_User = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.identity_UserBranchOffice")]
	public partial class identity_UserBranchOffice : INotifyPropertyChanging, INotifyPropertyChanged {

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _UserID;

		private string _BranchOfficeId;

		private EntityRef<identity_User> _identity_User;

		private EntityRef<identity_BranchOffice> _identity_BranchOffice;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnUserIDChanging(int value);
		partial void OnUserIDChanged();
		partial void OnBranchOfficeIdChanging(string value);
		partial void OnBranchOfficeIdChanged();
		#endregion

		public identity_UserBranchOffice() {
			this._identity_User = default(EntityRef<identity_User>);
			this._identity_BranchOffice = default(EntityRef<identity_BranchOffice>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int UserID {
			get {
				return this._UserID;
			}
			set {
				if ((this._UserID != value)) {
					if (this._identity_User.HasLoadedOrAssignedValue) {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BranchOfficeId", DbType = "VarChar(2) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string BranchOfficeId {
			get {
				return this._BranchOfficeId;
			}
			set {
				if ((this._BranchOfficeId != value)) {
					if (this._identity_BranchOffice.HasLoadedOrAssignedValue) {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchOfficeIdChanging(value);
					this.SendPropertyChanging();
					this._BranchOfficeId = value;
					this.SendPropertyChanged("BranchOfficeId");
					this.OnBranchOfficeIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "identity_User_identity_UserBranchOffice", Storage = "_identity_User", ThisKey = "UserID", OtherKey = "UserID", IsForeignKey = true)]
		public identity_User identity_User {
			get {
				return this._identity_User.Entity;
			}
			set {
				identity_User previousValue = this._identity_User.Entity;
				if (((previousValue != value)
							|| (this._identity_User.HasLoadedOrAssignedValue == false))) {
					this.SendPropertyChanging();
					if ((previousValue != null)) {
						this._identity_User.Entity = null;
						previousValue.identity_UserBranchOffices.Remove(this);
					}
					this._identity_User.Entity = value;
					if ((value != null)) {
						value.identity_UserBranchOffices.Add(this);
						this._UserID = value.UserID;
					}
					else {
						this._UserID = default(int);
					}
					this.SendPropertyChanged("identity_User");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "identity_BranchOffice_identity_UserBranchOffice", Storage = "_identity_BranchOffice", ThisKey = "BranchOfficeId", OtherKey = "BranchOfficeId", IsForeignKey = true)]
		public identity_BranchOffice identity_BranchOffice {
			get {
				return this._identity_BranchOffice.Entity;
			}
			set {
				identity_BranchOffice previousValue = this._identity_BranchOffice.Entity;
				if (((previousValue != value)
							|| (this._identity_BranchOffice.HasLoadedOrAssignedValue == false))) {
					this.SendPropertyChanging();
					if ((previousValue != null)) {
						this._identity_BranchOffice.Entity = null;
						previousValue.identity_UserBranchOffices.Remove(this);
					}
					this._identity_BranchOffice.Entity = value;
					if ((value != null)) {
						value.identity_UserBranchOffices.Add(this);
						this._BranchOfficeId = value.BranchOfficeId;
					}
					else {
						this._BranchOfficeId = default(string);
					}
					this.SendPropertyChanged("identity_BranchOffice");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging() {
			if ((this.PropertyChanging != null)) {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName) {
			if ((this.PropertyChanged != null)) {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.identity_Department")]
	public partial class identity_Department : INotifyPropertyChanging, INotifyPropertyChanged {

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _DepartmentId;

		private string _DepartmentName;

		private EntitySet<identity_User> _identity_Users;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnDepartmentIdChanging(int value);
		partial void OnDepartmentIdChanged();
		partial void OnDepartmentNameChanging(string value);
		partial void OnDepartmentNameChanged();
		#endregion

		public identity_Department() {
			this._identity_Users = new EntitySet<identity_User>(new Action<identity_User>(this.attach_identity_Users), new Action<identity_User>(this.detach_identity_Users));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DepartmentId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int DepartmentId {
			get {
				return this._DepartmentId;
			}
			set {
				if ((this._DepartmentId != value)) {
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DepartmentName", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
		public string DepartmentName {
			get {
				return this._DepartmentName;
			}
			set {
				if ((this._DepartmentName != value)) {
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "identity_Department_identity_User", Storage = "_identity_Users", ThisKey = "DepartmentId", OtherKey = "DepartmentId")]
		public EntitySet<identity_User> identity_Users {
			get {
				return this._identity_Users;
			}
			set {
				this._identity_Users.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging() {
			if ((this.PropertyChanging != null)) {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName) {
			if ((this.PropertyChanged != null)) {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_identity_Users(identity_User entity) {
			this.SendPropertyChanging();
			entity.identity_Department = this;
		}

		private void detach_identity_Users(identity_User entity) {
			this.SendPropertyChanging();
			entity.identity_Department = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.identity_BranchOffice")]
	public partial class identity_BranchOffice : INotifyPropertyChanging, INotifyPropertyChanged {

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _BranchOfficeId;

		private string _BranchOfficeName;

		private string _RelativeBranchOfficeId;

		private EntitySet<identity_UserBranchOffice> _identity_UserBranchOffices;

		private EntitySet<identity_BranchOffice> _identity_BranchOffices;

		private EntityRef<identity_BranchOffice> _identity_BranchOffice1;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBranchOfficeIdChanging(string value);
		partial void OnBranchOfficeIdChanged();
		partial void OnBranchOfficeNameChanging(string value);
		partial void OnBranchOfficeNameChanged();
		partial void OnRelativeBranchOfficeIdChanging(string value);
		partial void OnRelativeBranchOfficeIdChanged();
		#endregion

		public identity_BranchOffice() {
			this._identity_UserBranchOffices = new EntitySet<identity_UserBranchOffice>(new Action<identity_UserBranchOffice>(this.attach_identity_UserBranchOffices), new Action<identity_UserBranchOffice>(this.detach_identity_UserBranchOffices));
			this._identity_BranchOffices = new EntitySet<identity_BranchOffice>(new Action<identity_BranchOffice>(this.attach_identity_BranchOffices), new Action<identity_BranchOffice>(this.detach_identity_BranchOffices));
			this._identity_BranchOffice1 = default(EntityRef<identity_BranchOffice>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BranchOfficeId", DbType = "VarChar(2) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string BranchOfficeId {
			get {
				return this._BranchOfficeId;
			}
			set {
				if ((this._BranchOfficeId != value)) {
					this.OnBranchOfficeIdChanging(value);
					this.SendPropertyChanging();
					this._BranchOfficeId = value;
					this.SendPropertyChanged("BranchOfficeId");
					this.OnBranchOfficeIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BranchOfficeName", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
		public string BranchOfficeName {
			get {
				return this._BranchOfficeName;
			}
			set {
				if ((this._BranchOfficeName != value)) {
					this.OnBranchOfficeNameChanging(value);
					this.SendPropertyChanging();
					this._BranchOfficeName = value;
					this.SendPropertyChanged("BranchOfficeName");
					this.OnBranchOfficeNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RelativeBranchOfficeId", DbType = "VarChar(2) NOT NULL", CanBeNull = false)]
		public string RelativeBranchOfficeId {
			get {
				return this._RelativeBranchOfficeId;
			}
			set {
				if ((this._RelativeBranchOfficeId != value)) {
					if (this._identity_BranchOffice1.HasLoadedOrAssignedValue) {
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelativeBranchOfficeIdChanging(value);
					this.SendPropertyChanging();
					this._RelativeBranchOfficeId = value;
					this.SendPropertyChanged("RelativeBranchOfficeId");
					this.OnRelativeBranchOfficeIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "identity_BranchOffice_identity_UserBranchOffice", Storage = "_identity_UserBranchOffices", ThisKey = "BranchOfficeId", OtherKey = "BranchOfficeId")]
		public EntitySet<identity_UserBranchOffice> identity_UserBranchOffices {
			get {
				return this._identity_UserBranchOffices;
			}
			set {
				this._identity_UserBranchOffices.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "identity_BranchOffice_identity_BranchOffice", Storage = "_identity_BranchOffices", ThisKey = "BranchOfficeId", OtherKey = "RelativeBranchOfficeId")]
		public EntitySet<identity_BranchOffice> identity_BranchOffices {
			get {
				return this._identity_BranchOffices;
			}
			set {
				this._identity_BranchOffices.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "identity_BranchOffice_identity_BranchOffice", Storage = "_identity_BranchOffice1", ThisKey = "RelativeBranchOfficeId", OtherKey = "BranchOfficeId", IsForeignKey = true)]
		public identity_BranchOffice identity_BranchOffice1 {
			get {
				return this._identity_BranchOffice1.Entity;
			}
			set {
				identity_BranchOffice previousValue = this._identity_BranchOffice1.Entity;
				if (((previousValue != value)
							|| (this._identity_BranchOffice1.HasLoadedOrAssignedValue == false))) {
					this.SendPropertyChanging();
					if ((previousValue != null)) {
						this._identity_BranchOffice1.Entity = null;
						previousValue.identity_BranchOffices.Remove(this);
					}
					this._identity_BranchOffice1.Entity = value;
					if ((value != null)) {
						value.identity_BranchOffices.Add(this);
						this._RelativeBranchOfficeId = value.BranchOfficeId;
					}
					else {
						this._RelativeBranchOfficeId = default(string);
					}
					this.SendPropertyChanged("identity_BranchOffice1");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging() {
			if ((this.PropertyChanging != null)) {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName) {
			if ((this.PropertyChanged != null)) {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_identity_UserBranchOffices(identity_UserBranchOffice entity) {
			this.SendPropertyChanging();
			entity.identity_BranchOffice = this;
		}

		private void detach_identity_UserBranchOffices(identity_UserBranchOffice entity) {
			this.SendPropertyChanging();
			entity.identity_BranchOffice = null;
		}

		private void attach_identity_BranchOffices(identity_BranchOffice entity) {
			this.SendPropertyChanging();
			entity.identity_BranchOffice1 = this;
		}

		private void detach_identity_BranchOffices(identity_BranchOffice entity) {
			this.SendPropertyChanging();
			entity.identity_BranchOffice1 = null;
		}
	}
}
#pragma warning restore 1591
