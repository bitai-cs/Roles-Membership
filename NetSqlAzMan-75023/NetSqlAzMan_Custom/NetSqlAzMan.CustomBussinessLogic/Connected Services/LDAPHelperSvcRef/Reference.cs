//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LDAPSearchResult", Namespace="http://schemas.datacontract.org/2004/07/LDAPProxyWebSvc")]
    [System.SerializableAttribute()]
    public partial class LDAPSearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectoryEntryPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ResultFromGCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string canonicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string companyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> createTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string defaultClassStoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string departmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string displayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string distinguishedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string givenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long lastLogonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult managerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] memberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] memberOfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string objectCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] objectClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string objectGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] objectGuidBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string objectSidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] objectSidBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string samAccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string snField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string telephoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userPrincipalNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectoryEntryPath {
            get {
                return this.DirectoryEntryPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectoryEntryPathField, value) != true)) {
                    this.DirectoryEntryPathField = value;
                    this.RaisePropertyChanged("DirectoryEntryPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainProfile {
            get {
                return this.DomainProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainProfileField, value) != true)) {
                    this.DomainProfileField = value;
                    this.RaisePropertyChanged("DomainProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ResultFromGC {
            get {
                return this.ResultFromGCField;
            }
            set {
                if ((this.ResultFromGCField.Equals(value) != true)) {
                    this.ResultFromGCField = value;
                    this.RaisePropertyChanged("ResultFromGC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string c {
            get {
                return this.cField;
            }
            set {
                if ((object.ReferenceEquals(this.cField, value) != true)) {
                    this.cField = value;
                    this.RaisePropertyChanged("c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string canonicalName {
            get {
                return this.canonicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.canonicalNameField, value) != true)) {
                    this.canonicalNameField = value;
                    this.RaisePropertyChanged("canonicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cn {
            get {
                return this.cnField;
            }
            set {
                if ((object.ReferenceEquals(this.cnField, value) != true)) {
                    this.cnField = value;
                    this.RaisePropertyChanged("cn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string company {
            get {
                return this.companyField;
            }
            set {
                if ((object.ReferenceEquals(this.companyField, value) != true)) {
                    this.companyField = value;
                    this.RaisePropertyChanged("company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> createTimeStamp {
            get {
                return this.createTimeStampField;
            }
            set {
                if ((this.createTimeStampField.Equals(value) != true)) {
                    this.createTimeStampField = value;
                    this.RaisePropertyChanged("createTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string defaultClassStore {
            get {
                return this.defaultClassStoreField;
            }
            set {
                if ((object.ReferenceEquals(this.defaultClassStoreField, value) != true)) {
                    this.defaultClassStoreField = value;
                    this.RaisePropertyChanged("defaultClassStore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string department {
            get {
                return this.departmentField;
            }
            set {
                if ((object.ReferenceEquals(this.departmentField, value) != true)) {
                    this.departmentField = value;
                    this.RaisePropertyChanged("department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.displayNameField, value) != true)) {
                    this.displayNameField = value;
                    this.RaisePropertyChanged("displayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string distinguishedName {
            get {
                return this.distinguishedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.distinguishedNameField, value) != true)) {
                    this.distinguishedNameField = value;
                    this.RaisePropertyChanged("distinguishedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string givenName {
            get {
                return this.givenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.givenNameField, value) != true)) {
                    this.givenNameField = value;
                    this.RaisePropertyChanged("givenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                if ((this.isDeletedField.Equals(value) != true)) {
                    this.isDeletedField = value;
                    this.RaisePropertyChanged("isDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long lastLogon {
            get {
                return this.lastLogonField;
            }
            set {
                if ((this.lastLogonField.Equals(value) != true)) {
                    this.lastLogonField = value;
                    this.RaisePropertyChanged("lastLogon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mail {
            get {
                return this.mailField;
            }
            set {
                if ((object.ReferenceEquals(this.mailField, value) != true)) {
                    this.mailField = value;
                    this.RaisePropertyChanged("mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult manager {
            get {
                return this.managerField;
            }
            set {
                if ((object.ReferenceEquals(this.managerField, value) != true)) {
                    this.managerField = value;
                    this.RaisePropertyChanged("manager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] member {
            get {
                return this.memberField;
            }
            set {
                if ((object.ReferenceEquals(this.memberField, value) != true)) {
                    this.memberField = value;
                    this.RaisePropertyChanged("member");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] memberOf {
            get {
                return this.memberOfField;
            }
            set {
                if ((object.ReferenceEquals(this.memberOfField, value) != true)) {
                    this.memberOfField = value;
                    this.RaisePropertyChanged("memberOf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string objectCategory {
            get {
                return this.objectCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.objectCategoryField, value) != true)) {
                    this.objectCategoryField = value;
                    this.RaisePropertyChanged("objectCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] objectClass {
            get {
                return this.objectClassField;
            }
            set {
                if ((object.ReferenceEquals(this.objectClassField, value) != true)) {
                    this.objectClassField = value;
                    this.RaisePropertyChanged("objectClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string objectGuid {
            get {
                return this.objectGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.objectGuidField, value) != true)) {
                    this.objectGuidField = value;
                    this.RaisePropertyChanged("objectGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] objectGuidBytes {
            get {
                return this.objectGuidBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.objectGuidBytesField, value) != true)) {
                    this.objectGuidBytesField = value;
                    this.RaisePropertyChanged("objectGuidBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string objectSid {
            get {
                return this.objectSidField;
            }
            set {
                if ((object.ReferenceEquals(this.objectSidField, value) != true)) {
                    this.objectSidField = value;
                    this.RaisePropertyChanged("objectSid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] objectSidBytes {
            get {
                return this.objectSidBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.objectSidBytesField, value) != true)) {
                    this.objectSidBytesField = value;
                    this.RaisePropertyChanged("objectSidBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string samAccountName {
            get {
                return this.samAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.samAccountNameField, value) != true)) {
                    this.samAccountNameField = value;
                    this.RaisePropertyChanged("samAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sn {
            get {
                return this.snField;
            }
            set {
                if ((object.ReferenceEquals(this.snField, value) != true)) {
                    this.snField = value;
                    this.RaisePropertyChanged("sn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string telephoneNumber {
            get {
                return this.telephoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.telephoneNumberField, value) != true)) {
                    this.telephoneNumberField = value;
                    this.RaisePropertyChanged("telephoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userPrincipalName {
            get {
                return this.userPrincipalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userPrincipalNameField, value) != true)) {
                    this.userPrincipalNameField = value;
                    this.RaisePropertyChanged("userPrincipalName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusInfo", Namespace="http://schemas.datacontract.org/2004/07/LDAPProxyWebSvc")]
    [System.SerializableAttribute()]
    public partial class StatusInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeField, value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsException {
            get {
                return this.IsExceptionField;
            }
            set {
                if ((this.IsExceptionField.Equals(value) != true)) {
                    this.IsExceptionField = value;
                    this.RaisePropertyChanged("IsException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LDAPHelper.ADProperties", Namespace="http://schemas.datacontract.org/2004/07/LDAPProxyWebSvc")]
    public enum LDAPHelperADProperties : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        objectGuid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        objectSid = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        telephoneNumber = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        samAccountName = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        manager = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        title = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        givenName = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        sn = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cn = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        canonicalName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        userPrincipalName = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        c = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        company = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        createTimeStamp = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        defaultClassStore = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        department = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        description = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        displayName = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        distinguishedName = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        isDeleted = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        lastLogon = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        objectCategory = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        objectClass = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        member = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        memberOf = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        mail = 25,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchScope", Namespace="http://schemas.datacontract.org/2004/07/System.DirectoryServices")]
    public enum SearchScope : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Base = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneLevel = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Subtree = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ADObjectType", Namespace="http://schemas.datacontract.org/2004/07/LDAPProxyWebSvc")]
    public enum ADObjectType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UsersAndGroups = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UsersOnly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneUserOnly = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ADObject", Namespace="http://schemas.datacontract.org/2004/07/LDAPProxyWebSvc")]
    [System.SerializableAttribute()]
    public partial class ADObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADsPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ADObjectState StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPNField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADsPath {
            get {
                return this.ADsPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ADsPathField, value) != true)) {
                    this.ADsPathField = value;
                    this.RaisePropertyChanged("ADsPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainProfile {
            get {
                return this.DomainProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainProfileField, value) != true)) {
                    this.DomainProfileField = value;
                    this.RaisePropertyChanged("DomainProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsGroup {
            get {
                return this.IsGroupField;
            }
            set {
                if ((this.IsGroupField.Equals(value) != true)) {
                    this.IsGroupField = value;
                    this.RaisePropertyChanged("IsGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sid {
            get {
                return this.SidField;
            }
            set {
                if ((object.ReferenceEquals(this.SidField, value) != true)) {
                    this.SidField = value;
                    this.RaisePropertyChanged("Sid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ADObjectState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPN {
            get {
                return this.UPNField;
            }
            set {
                if ((object.ReferenceEquals(this.UPNField, value) != true)) {
                    this.UPNField = value;
                    this.RaisePropertyChanged("UPN");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ADObjectState", Namespace="http://schemas.datacontract.org/2004/07/LDAPProxyWebSvc")]
    public enum ADObjectState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Resolved = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Multiple = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LDAPHelperSvcRef.ILDAPHelper")]
    public interface ILDAPHelper {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/GetDefaultNamingContext", ReplyAction="http://tempuri.org/ILDAPHelper/GetDefaultNamingContextResponse")]
        string GetDefaultNamingContext();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/GetDefaultNamingContext", ReplyAction="http://tempuri.org/ILDAPHelper/GetDefaultNamingContextResponse")]
        System.Threading.Tasks.Task<string> GetDefaultNamingContextAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/AuthenticateUser", ReplyAction="http://tempuri.org/ILDAPHelper/AuthenticateUserResponse")]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.AuthenticateUserResponse AuthenticateUser(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.AuthenticateUserRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/AuthenticateUser", ReplyAction="http://tempuri.org/ILDAPHelper/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.AuthenticateUserResponse> AuthenticateUserAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.AuthenticateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/GetCanonicalNameForSAMAccountName", ReplyAction="http://tempuri.org/ILDAPHelper/GetCanonicalNameForSAMAccountNameResponse")]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetCanonicalNameForSAMAccountNameResponse GetCanonicalNameForSAMAccountName(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetCanonicalNameForSAMAccountNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/GetCanonicalNameForSAMAccountName", ReplyAction="http://tempuri.org/ILDAPHelper/GetCanonicalNameForSAMAccountNameResponse")]
        System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetCanonicalNameForSAMAccountNameResponse> GetCanonicalNameForSAMAccountNameAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetCanonicalNameForSAMAccountNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/GetGroupsForSAMAccountName", ReplyAction="http://tempuri.org/ILDAPHelper/GetGroupsForSAMAccountNameResponse")]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsForSAMAccountNameResponse GetGroupsForSAMAccountName(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsForSAMAccountNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/GetGroupsForSAMAccountName", ReplyAction="http://tempuri.org/ILDAPHelper/GetGroupsForSAMAccountNameResponse")]
        System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsForSAMAccountNameResponse> GetGroupsForSAMAccountNameAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsForSAMAccountNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/CheckGroupMembershipForSAMAccountName", ReplyAction="http://tempuri.org/ILDAPHelper/CheckGroupMembershipForSAMAccountNameResponse")]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.CheckGroupMembershipForSAMAccountNameResponse CheckGroupMembershipForSAMAccountName(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.CheckGroupMembershipForSAMAccountNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/CheckGroupMembershipForSAMAccountName", ReplyAction="http://tempuri.org/ILDAPHelper/CheckGroupMembershipForSAMAccountNameResponse")]
        System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.CheckGroupMembershipForSAMAccountNameResponse> CheckGroupMembershipForSAMAccountNameAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.CheckGroupMembershipForSAMAccountNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/SearchAnything", ReplyAction="http://tempuri.org/ILDAPHelper/SearchAnythingResponse")]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchAnythingResponse SearchAnything(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchAnythingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/SearchAnything", ReplyAction="http://tempuri.org/ILDAPHelper/SearchAnythingResponse")]
        System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchAnythingResponse> SearchAnythingAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchAnythingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/SearchUsersAndGroups", ReplyAction="http://tempuri.org/ILDAPHelper/SearchUsersAndGroupsResponse")]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsResponse SearchUsersAndGroups(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/SearchUsersAndGroups", ReplyAction="http://tempuri.org/ILDAPHelper/SearchUsersAndGroupsResponse")]
        System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsResponse> SearchUsersAndGroupsAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/SearchUsersAndGroupsByTwoProperties", ReplyAction="http://tempuri.org/ILDAPHelper/SearchUsersAndGroupsByTwoPropertiesResponse")]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsByTwoPropertiesResponse SearchUsersAndGroupsByTwoProperties(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsByTwoPropertiesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/SearchUsersAndGroupsByTwoProperties", ReplyAction="http://tempuri.org/ILDAPHelper/SearchUsersAndGroupsByTwoPropertiesResponse")]
        System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsByTwoPropertiesResponse> SearchUsersAndGroupsByTwoPropertiesAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsByTwoPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/SearchBySid", ReplyAction="http://tempuri.org/ILDAPHelper/SearchBySidResponse")]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchBySidResponse SearchBySid(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchBySidRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/SearchBySid", ReplyAction="http://tempuri.org/ILDAPHelper/SearchBySidResponse")]
        System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchBySidResponse> SearchBySidAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchBySidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/SearchByBaseDN", ReplyAction="http://tempuri.org/ILDAPHelper/SearchByBaseDNResponse")]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchByBaseDNResponse SearchByBaseDN(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchByBaseDNRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/SearchByBaseDN", ReplyAction="http://tempuri.org/ILDAPHelper/SearchByBaseDNResponse")]
        System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchByBaseDNResponse> SearchByBaseDNAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchByBaseDNRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/SearchUsersAndGroupsOrNTAccount", ReplyAction="http://tempuri.org/ILDAPHelper/SearchUsersAndGroupsOrNTAccountResponse")]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsOrNTAccountResponse SearchUsersAndGroupsOrNTAccount(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsOrNTAccountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/SearchUsersAndGroupsOrNTAccount", ReplyAction="http://tempuri.org/ILDAPHelper/SearchUsersAndGroupsOrNTAccountResponse")]
        System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsOrNTAccountResponse> SearchUsersAndGroupsOrNTAccountAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsOrNTAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/GetGroupsRecursivelyForObjectSID", ReplyAction="http://tempuri.org/ILDAPHelper/GetGroupsRecursivelyForObjectSIDResponse")]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForObjectSIDResponse GetGroupsRecursivelyForObjectSID(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForObjectSIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/GetGroupsRecursivelyForObjectSID", ReplyAction="http://tempuri.org/ILDAPHelper/GetGroupsRecursivelyForObjectSIDResponse")]
        System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForObjectSIDResponse> GetGroupsRecursivelyForObjectSIDAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForObjectSIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/GetGroupsRecursivelyForDistinguishedName", ReplyAction="http://tempuri.org/ILDAPHelper/GetGroupsRecursivelyForDistinguishedNameResponse")]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForDistinguishedNameResponse GetGroupsRecursivelyForDistinguishedName(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForDistinguishedNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILDAPHelper/GetGroupsRecursivelyForDistinguishedName", ReplyAction="http://tempuri.org/ILDAPHelper/GetGroupsRecursivelyForDistinguishedNameResponse")]
        System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForDistinguishedNameResponse> GetGroupsRecursivelyForDistinguishedNameAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForDistinguishedNameRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthenticateUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string domainProfile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string domainUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool useGC;
        
        public AuthenticateUserRequest() {
        }
        
        public AuthenticateUserRequest(string domainProfile, string domainUser, string password, bool useGC) {
            this.domainProfile = domainProfile;
            this.domainUser = domainUser;
            this.password = password;
            this.useGC = useGC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthenticateUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool AuthenticateUserResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool authenticated;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult userProperties;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status;
        
        public AuthenticateUserResponse() {
        }
        
        public AuthenticateUserResponse(bool AuthenticateUserResult, bool authenticated, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult userProperties, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            this.AuthenticateUserResult = AuthenticateUserResult;
            this.authenticated = authenticated;
            this.userProperties = userProperties;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCanonicalNameForSAMAccountName", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCanonicalNameForSAMAccountNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string domainProfile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sAMAccountName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool useGC;
        
        public GetCanonicalNameForSAMAccountNameRequest() {
        }
        
        public GetCanonicalNameForSAMAccountNameRequest(string domainProfile, string sAMAccountName, bool useGC) {
            this.domainProfile = domainProfile;
            this.sAMAccountName = sAMAccountName;
            this.useGC = useGC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCanonicalNameForSAMAccountNameResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCanonicalNameForSAMAccountNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetCanonicalNameForSAMAccountNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string canonicalName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status;
        
        public GetCanonicalNameForSAMAccountNameResponse() {
        }
        
        public GetCanonicalNameForSAMAccountNameResponse(bool GetCanonicalNameForSAMAccountNameResult, string canonicalName, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            this.GetCanonicalNameForSAMAccountNameResult = GetCanonicalNameForSAMAccountNameResult;
            this.canonicalName = canonicalName;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGroupsForSAMAccountName", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetGroupsForSAMAccountNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string domainProfile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sAMAccountName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool useGC;
        
        public GetGroupsForSAMAccountNameRequest() {
        }
        
        public GetGroupsForSAMAccountNameRequest(string domainProfile, string sAMAccountName, bool useGC) {
            this.domainProfile = domainProfile;
            this.sAMAccountName = sAMAccountName;
            this.useGC = useGC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGroupsForSAMAccountNameResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetGroupsForSAMAccountNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetGroupsForSAMAccountNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] groups;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status;
        
        public GetGroupsForSAMAccountNameResponse() {
        }
        
        public GetGroupsForSAMAccountNameResponse(bool GetGroupsForSAMAccountNameResult, string[] groups, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            this.GetGroupsForSAMAccountNameResult = GetGroupsForSAMAccountNameResult;
            this.groups = groups;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckGroupMembershipForSAMAccountName", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckGroupMembershipForSAMAccountNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string domainProfile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sAMAccountName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string groupName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool useGC;
        
        public CheckGroupMembershipForSAMAccountNameRequest() {
        }
        
        public CheckGroupMembershipForSAMAccountNameRequest(string domainProfile, string sAMAccountName, string groupName, bool useGC) {
            this.domainProfile = domainProfile;
            this.sAMAccountName = sAMAccountName;
            this.groupName = groupName;
            this.useGC = useGC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckGroupMembershipForSAMAccountNameResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckGroupMembershipForSAMAccountNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CheckGroupMembershipForSAMAccountNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool isMember;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status;
        
        public CheckGroupMembershipForSAMAccountNameResponse() {
        }
        
        public CheckGroupMembershipForSAMAccountNameResponse(bool CheckGroupMembershipForSAMAccountNameResult, bool isMember, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            this.CheckGroupMembershipForSAMAccountNameResult = CheckGroupMembershipForSAMAccountNameResult;
            this.isMember = isMember;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchAnything", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchAnythingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string domainProfile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPHelperADProperties filterProperty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string filterValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool useGC;
        
        public SearchAnythingRequest() {
        }
        
        public SearchAnythingRequest(string domainProfile, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPHelperADProperties filterProperty, string filterValue, bool useGC) {
            this.domainProfile = domainProfile;
            this.filterProperty = filterProperty;
            this.filterValue = filterValue;
            this.useGC = useGC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchAnythingResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchAnythingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SearchAnythingResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status;
        
        public SearchAnythingResponse() {
        }
        
        public SearchAnythingResponse(bool SearchAnythingResult, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] result, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            this.SearchAnythingResult = SearchAnythingResult;
            this.result = result;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchUsersAndGroups", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchUsersAndGroupsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string domainProfile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPHelperADProperties filterProperty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string filterValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool useGC;
        
        public SearchUsersAndGroupsRequest() {
        }
        
        public SearchUsersAndGroupsRequest(string domainProfile, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPHelperADProperties filterProperty, string filterValue, bool useGC) {
            this.domainProfile = domainProfile;
            this.filterProperty = filterProperty;
            this.filterValue = filterValue;
            this.useGC = useGC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchUsersAndGroupsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchUsersAndGroupsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SearchUsersAndGroupsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status;
        
        public SearchUsersAndGroupsResponse() {
        }
        
        public SearchUsersAndGroupsResponse(bool SearchUsersAndGroupsResult, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] result, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            this.SearchUsersAndGroupsResult = SearchUsersAndGroupsResult;
            this.result = result;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchUsersAndGroupsByTwoProperties", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchUsersAndGroupsByTwoPropertiesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string domainProfile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPHelperADProperties filterProperty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string filterValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPHelperADProperties filterProperty2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string filterValue2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public bool useGC;
        
        public SearchUsersAndGroupsByTwoPropertiesRequest() {
        }
        
        public SearchUsersAndGroupsByTwoPropertiesRequest(string domainProfile, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPHelperADProperties filterProperty, string filterValue, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPHelperADProperties filterProperty2, string filterValue2, bool useGC) {
            this.domainProfile = domainProfile;
            this.filterProperty = filterProperty;
            this.filterValue = filterValue;
            this.filterProperty2 = filterProperty2;
            this.filterValue2 = filterValue2;
            this.useGC = useGC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchUsersAndGroupsByTwoPropertiesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchUsersAndGroupsByTwoPropertiesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SearchUsersAndGroupsByTwoPropertiesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status;
        
        public SearchUsersAndGroupsByTwoPropertiesResponse() {
        }
        
        public SearchUsersAndGroupsByTwoPropertiesResponse(bool SearchUsersAndGroupsByTwoPropertiesResult, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] result, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            this.SearchUsersAndGroupsByTwoPropertiesResult = SearchUsersAndGroupsByTwoPropertiesResult;
            this.result = result;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchBySid", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchBySidRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string domainProfile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string objectSid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool useGC;
        
        public SearchBySidRequest() {
        }
        
        public SearchBySidRequest(string domainProfile, string objectSid, bool useGC) {
            this.domainProfile = domainProfile;
            this.objectSid = objectSid;
            this.useGC = useGC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchBySidResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchBySidResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SearchBySidResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] searchResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status;
        
        public SearchBySidResponse() {
        }
        
        public SearchBySidResponse(bool SearchBySidResult, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] searchResult, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            this.SearchBySidResult = SearchBySidResult;
            this.searchResult = searchResult;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchByBaseDN", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchByBaseDNRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string domainProfile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string baseDN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchScope scope;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool useGC;
        
        public SearchByBaseDNRequest() {
        }
        
        public SearchByBaseDNRequest(string domainProfile, string baseDN, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchScope scope, bool useGC) {
            this.domainProfile = domainProfile;
            this.baseDN = baseDN;
            this.scope = scope;
            this.useGC = useGC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchByBaseDNResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchByBaseDNResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SearchByBaseDNResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] searchResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status;
        
        public SearchByBaseDNResponse() {
        }
        
        public SearchByBaseDNResponse(bool SearchByBaseDNResult, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] searchResult, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            this.SearchByBaseDNResult = SearchByBaseDNResult;
            this.searchResult = searchResult;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchUsersAndGroupsOrNTAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchUsersAndGroupsOrNTAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string domainProfile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ADObjectType adObjectType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool useGC;
        
        public SearchUsersAndGroupsOrNTAccountRequest() {
        }
        
        public SearchUsersAndGroupsOrNTAccountRequest(string domainProfile, string name, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ADObjectType adObjectType, bool useGC) {
            this.domainProfile = domainProfile;
            this.name = name;
            this.adObjectType = adObjectType;
            this.useGC = useGC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchUsersAndGroupsOrNTAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchUsersAndGroupsOrNTAccountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SearchUsersAndGroupsOrNTAccountResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ADObject[] proposed;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status;
        
        public SearchUsersAndGroupsOrNTAccountResponse() {
        }
        
        public SearchUsersAndGroupsOrNTAccountResponse(bool SearchUsersAndGroupsOrNTAccountResult, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ADObject[] proposed, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            this.SearchUsersAndGroupsOrNTAccountResult = SearchUsersAndGroupsOrNTAccountResult;
            this.proposed = proposed;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGroupsRecursivelyForObjectSID", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetGroupsRecursivelyForObjectSIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string domainProfile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string objectSid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool useGC;
        
        public GetGroupsRecursivelyForObjectSIDRequest() {
        }
        
        public GetGroupsRecursivelyForObjectSIDRequest(string domainProfile, string objectSid, bool useGC) {
            this.domainProfile = domainProfile;
            this.objectSid = objectSid;
            this.useGC = useGC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGroupsRecursivelyForObjectSIDResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetGroupsRecursivelyForObjectSIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetGroupsRecursivelyForObjectSIDResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] groups;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status;
        
        public GetGroupsRecursivelyForObjectSIDResponse() {
        }
        
        public GetGroupsRecursivelyForObjectSIDResponse(bool GetGroupsRecursivelyForObjectSIDResult, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] groups, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            this.GetGroupsRecursivelyForObjectSIDResult = GetGroupsRecursivelyForObjectSIDResult;
            this.groups = groups;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGroupsRecursivelyForDistinguishedName", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetGroupsRecursivelyForDistinguishedNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string domainProfile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string distinguishedName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool useGC;
        
        public GetGroupsRecursivelyForDistinguishedNameRequest() {
        }
        
        public GetGroupsRecursivelyForDistinguishedNameRequest(string domainProfile, string distinguishedName, bool useGC) {
            this.domainProfile = domainProfile;
            this.distinguishedName = distinguishedName;
            this.useGC = useGC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGroupsRecursivelyForDistinguishedNameResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetGroupsRecursivelyForDistinguishedNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetGroupsRecursivelyForDistinguishedNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] groups;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status;
        
        public GetGroupsRecursivelyForDistinguishedNameResponse() {
        }
        
        public GetGroupsRecursivelyForDistinguishedNameResponse(bool GetGroupsRecursivelyForDistinguishedNameResult, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] groups, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            this.GetGroupsRecursivelyForDistinguishedNameResult = GetGroupsRecursivelyForDistinguishedNameResult;
            this.groups = groups;
            this.status = status;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILDAPHelperChannel : NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LDAPHelperClient : System.ServiceModel.ClientBase<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper>, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper {
        
        public LDAPHelperClient() {
        }
        
        public LDAPHelperClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LDAPHelperClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LDAPHelperClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LDAPHelperClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetDefaultNamingContext() {
            return base.Channel.GetDefaultNamingContext();
        }
        
        public System.Threading.Tasks.Task<string> GetDefaultNamingContextAsync() {
            return base.Channel.GetDefaultNamingContextAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.AuthenticateUserResponse NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper.AuthenticateUser(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.AuthenticateUserRequest request) {
            return base.Channel.AuthenticateUser(request);
        }
        
        public bool AuthenticateUser(string domainProfile, string domainUser, string password, bool useGC, out bool authenticated, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult userProperties, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.AuthenticateUserRequest inValue = new NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.AuthenticateUserRequest();
            inValue.domainProfile = domainProfile;
            inValue.domainUser = domainUser;
            inValue.password = password;
            inValue.useGC = useGC;
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.AuthenticateUserResponse retVal = ((NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper)(this)).AuthenticateUser(inValue);
            authenticated = retVal.authenticated;
            userProperties = retVal.userProperties;
            status = retVal.status;
            return retVal.AuthenticateUserResult;
        }
        
        public System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.AuthenticateUserResponse> AuthenticateUserAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.AuthenticateUserRequest request) {
            return base.Channel.AuthenticateUserAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetCanonicalNameForSAMAccountNameResponse NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper.GetCanonicalNameForSAMAccountName(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetCanonicalNameForSAMAccountNameRequest request) {
            return base.Channel.GetCanonicalNameForSAMAccountName(request);
        }
        
        public bool GetCanonicalNameForSAMAccountName(string domainProfile, string sAMAccountName, bool useGC, out string canonicalName, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetCanonicalNameForSAMAccountNameRequest inValue = new NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetCanonicalNameForSAMAccountNameRequest();
            inValue.domainProfile = domainProfile;
            inValue.sAMAccountName = sAMAccountName;
            inValue.useGC = useGC;
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetCanonicalNameForSAMAccountNameResponse retVal = ((NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper)(this)).GetCanonicalNameForSAMAccountName(inValue);
            canonicalName = retVal.canonicalName;
            status = retVal.status;
            return retVal.GetCanonicalNameForSAMAccountNameResult;
        }
        
        public System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetCanonicalNameForSAMAccountNameResponse> GetCanonicalNameForSAMAccountNameAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetCanonicalNameForSAMAccountNameRequest request) {
            return base.Channel.GetCanonicalNameForSAMAccountNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsForSAMAccountNameResponse NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper.GetGroupsForSAMAccountName(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsForSAMAccountNameRequest request) {
            return base.Channel.GetGroupsForSAMAccountName(request);
        }
        
        public bool GetGroupsForSAMAccountName(string domainProfile, string sAMAccountName, bool useGC, out string[] groups, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsForSAMAccountNameRequest inValue = new NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsForSAMAccountNameRequest();
            inValue.domainProfile = domainProfile;
            inValue.sAMAccountName = sAMAccountName;
            inValue.useGC = useGC;
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsForSAMAccountNameResponse retVal = ((NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper)(this)).GetGroupsForSAMAccountName(inValue);
            groups = retVal.groups;
            status = retVal.status;
            return retVal.GetGroupsForSAMAccountNameResult;
        }
        
        public System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsForSAMAccountNameResponse> GetGroupsForSAMAccountNameAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsForSAMAccountNameRequest request) {
            return base.Channel.GetGroupsForSAMAccountNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.CheckGroupMembershipForSAMAccountNameResponse NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper.CheckGroupMembershipForSAMAccountName(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.CheckGroupMembershipForSAMAccountNameRequest request) {
            return base.Channel.CheckGroupMembershipForSAMAccountName(request);
        }
        
        public bool CheckGroupMembershipForSAMAccountName(string domainProfile, string sAMAccountName, string groupName, bool useGC, out bool isMember, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.CheckGroupMembershipForSAMAccountNameRequest inValue = new NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.CheckGroupMembershipForSAMAccountNameRequest();
            inValue.domainProfile = domainProfile;
            inValue.sAMAccountName = sAMAccountName;
            inValue.groupName = groupName;
            inValue.useGC = useGC;
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.CheckGroupMembershipForSAMAccountNameResponse retVal = ((NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper)(this)).CheckGroupMembershipForSAMAccountName(inValue);
            isMember = retVal.isMember;
            status = retVal.status;
            return retVal.CheckGroupMembershipForSAMAccountNameResult;
        }
        
        public System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.CheckGroupMembershipForSAMAccountNameResponse> CheckGroupMembershipForSAMAccountNameAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.CheckGroupMembershipForSAMAccountNameRequest request) {
            return base.Channel.CheckGroupMembershipForSAMAccountNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchAnythingResponse NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper.SearchAnything(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchAnythingRequest request) {
            return base.Channel.SearchAnything(request);
        }
        
        public bool SearchAnything(string domainProfile, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPHelperADProperties filterProperty, string filterValue, bool useGC, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] result, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchAnythingRequest inValue = new NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchAnythingRequest();
            inValue.domainProfile = domainProfile;
            inValue.filterProperty = filterProperty;
            inValue.filterValue = filterValue;
            inValue.useGC = useGC;
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchAnythingResponse retVal = ((NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper)(this)).SearchAnything(inValue);
            result = retVal.result;
            status = retVal.status;
            return retVal.SearchAnythingResult;
        }
        
        public System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchAnythingResponse> SearchAnythingAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchAnythingRequest request) {
            return base.Channel.SearchAnythingAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsResponse NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper.SearchUsersAndGroups(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsRequest request) {
            return base.Channel.SearchUsersAndGroups(request);
        }
        
        public bool SearchUsersAndGroups(string domainProfile, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPHelperADProperties filterProperty, string filterValue, bool useGC, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] result, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsRequest inValue = new NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsRequest();
            inValue.domainProfile = domainProfile;
            inValue.filterProperty = filterProperty;
            inValue.filterValue = filterValue;
            inValue.useGC = useGC;
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsResponse retVal = ((NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper)(this)).SearchUsersAndGroups(inValue);
            result = retVal.result;
            status = retVal.status;
            return retVal.SearchUsersAndGroupsResult;
        }
        
        public System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsResponse> SearchUsersAndGroupsAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsRequest request) {
            return base.Channel.SearchUsersAndGroupsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsByTwoPropertiesResponse NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper.SearchUsersAndGroupsByTwoProperties(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsByTwoPropertiesRequest request) {
            return base.Channel.SearchUsersAndGroupsByTwoProperties(request);
        }
        
        public bool SearchUsersAndGroupsByTwoProperties(string domainProfile, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPHelperADProperties filterProperty, string filterValue, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPHelperADProperties filterProperty2, string filterValue2, bool useGC, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] result, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsByTwoPropertiesRequest inValue = new NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsByTwoPropertiesRequest();
            inValue.domainProfile = domainProfile;
            inValue.filterProperty = filterProperty;
            inValue.filterValue = filterValue;
            inValue.filterProperty2 = filterProperty2;
            inValue.filterValue2 = filterValue2;
            inValue.useGC = useGC;
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsByTwoPropertiesResponse retVal = ((NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper)(this)).SearchUsersAndGroupsByTwoProperties(inValue);
            result = retVal.result;
            status = retVal.status;
            return retVal.SearchUsersAndGroupsByTwoPropertiesResult;
        }
        
        public System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsByTwoPropertiesResponse> SearchUsersAndGroupsByTwoPropertiesAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsByTwoPropertiesRequest request) {
            return base.Channel.SearchUsersAndGroupsByTwoPropertiesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchBySidResponse NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper.SearchBySid(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchBySidRequest request) {
            return base.Channel.SearchBySid(request);
        }
        
        public bool SearchBySid(string domainProfile, string objectSid, bool useGC, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] searchResult, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchBySidRequest inValue = new NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchBySidRequest();
            inValue.domainProfile = domainProfile;
            inValue.objectSid = objectSid;
            inValue.useGC = useGC;
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchBySidResponse retVal = ((NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper)(this)).SearchBySid(inValue);
            searchResult = retVal.searchResult;
            status = retVal.status;
            return retVal.SearchBySidResult;
        }
        
        public System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchBySidResponse> SearchBySidAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchBySidRequest request) {
            return base.Channel.SearchBySidAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchByBaseDNResponse NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper.SearchByBaseDN(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchByBaseDNRequest request) {
            return base.Channel.SearchByBaseDN(request);
        }
        
        public bool SearchByBaseDN(string domainProfile, string baseDN, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchScope scope, bool useGC, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] searchResult, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchByBaseDNRequest inValue = new NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchByBaseDNRequest();
            inValue.domainProfile = domainProfile;
            inValue.baseDN = baseDN;
            inValue.scope = scope;
            inValue.useGC = useGC;
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchByBaseDNResponse retVal = ((NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper)(this)).SearchByBaseDN(inValue);
            searchResult = retVal.searchResult;
            status = retVal.status;
            return retVal.SearchByBaseDNResult;
        }
        
        public System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchByBaseDNResponse> SearchByBaseDNAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchByBaseDNRequest request) {
            return base.Channel.SearchByBaseDNAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsOrNTAccountResponse NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper.SearchUsersAndGroupsOrNTAccount(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsOrNTAccountRequest request) {
            return base.Channel.SearchUsersAndGroupsOrNTAccount(request);
        }
        
        public bool SearchUsersAndGroupsOrNTAccount(string domainProfile, string name, NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ADObjectType adObjectType, bool useGC, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ADObject[] proposed, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsOrNTAccountRequest inValue = new NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsOrNTAccountRequest();
            inValue.domainProfile = domainProfile;
            inValue.name = name;
            inValue.adObjectType = adObjectType;
            inValue.useGC = useGC;
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsOrNTAccountResponse retVal = ((NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper)(this)).SearchUsersAndGroupsOrNTAccount(inValue);
            proposed = retVal.proposed;
            status = retVal.status;
            return retVal.SearchUsersAndGroupsOrNTAccountResult;
        }
        
        public System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsOrNTAccountResponse> SearchUsersAndGroupsOrNTAccountAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.SearchUsersAndGroupsOrNTAccountRequest request) {
            return base.Channel.SearchUsersAndGroupsOrNTAccountAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForObjectSIDResponse NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper.GetGroupsRecursivelyForObjectSID(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForObjectSIDRequest request) {
            return base.Channel.GetGroupsRecursivelyForObjectSID(request);
        }
        
        public bool GetGroupsRecursivelyForObjectSID(string domainProfile, string objectSid, bool useGC, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] groups, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForObjectSIDRequest inValue = new NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForObjectSIDRequest();
            inValue.domainProfile = domainProfile;
            inValue.objectSid = objectSid;
            inValue.useGC = useGC;
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForObjectSIDResponse retVal = ((NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper)(this)).GetGroupsRecursivelyForObjectSID(inValue);
            groups = retVal.groups;
            status = retVal.status;
            return retVal.GetGroupsRecursivelyForObjectSIDResult;
        }
        
        public System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForObjectSIDResponse> GetGroupsRecursivelyForObjectSIDAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForObjectSIDRequest request) {
            return base.Channel.GetGroupsRecursivelyForObjectSIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForDistinguishedNameResponse NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper.GetGroupsRecursivelyForDistinguishedName(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForDistinguishedNameRequest request) {
            return base.Channel.GetGroupsRecursivelyForDistinguishedName(request);
        }
        
        public bool GetGroupsRecursivelyForDistinguishedName(string domainProfile, string distinguishedName, bool useGC, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.LDAPSearchResult[] groups, out NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.StatusInfo status) {
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForDistinguishedNameRequest inValue = new NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForDistinguishedNameRequest();
            inValue.domainProfile = domainProfile;
            inValue.distinguishedName = distinguishedName;
            inValue.useGC = useGC;
            NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForDistinguishedNameResponse retVal = ((NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.ILDAPHelper)(this)).GetGroupsRecursivelyForDistinguishedName(inValue);
            groups = retVal.groups;
            status = retVal.status;
            return retVal.GetGroupsRecursivelyForDistinguishedNameResult;
        }
        
        public System.Threading.Tasks.Task<NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForDistinguishedNameResponse> GetGroupsRecursivelyForDistinguishedNameAsync(NetSqlAzMan.CustomBussinessLogic.LDAPHelperSvcRef.GetGroupsRecursivelyForDistinguishedNameRequest request) {
            return base.Channel.GetGroupsRecursivelyForDistinguishedNameAsync(request);
        }
    }
}
