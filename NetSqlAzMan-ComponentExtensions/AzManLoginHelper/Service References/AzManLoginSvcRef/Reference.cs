//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AzManLoginHelper.AzManLoginSvcRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBUser", Namespace="http://schemas.datacontract.org/2004/07/NetSqlAzMan.Cache")]
    [System.SerializableAttribute()]
    public partial class DBUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeString {
            get {
                return this.AttributeStringField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeStringField, value) != true)) {
                    this.AttributeStringField = value;
                    this.RaisePropertyChanged("AttributeString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationType", Namespace="http://NetSqlAzMan/ServiceModel")]
    public enum AuthorizationType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Neutral = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Allow = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deny = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowWithDelegation = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginInfo", Namespace="http://schemas.datacontract.org/2004/07/AzManLoginWebServices")]
    [System.SerializableAttribute()]
    public partial class LoginInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LDAPDomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LoginGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AzManLoginHelper.AzManLoginSvcRef.LoginStatusEnum StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppName {
            get {
                return this.AppNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AppNameField, value) != true)) {
                    this.AppNameField = value;
                    this.RaisePropertyChanged("AppName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LDAPDomain {
            get {
                return this.LDAPDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.LDAPDomainField, value) != true)) {
                    this.LDAPDomainField = value;
                    this.RaisePropertyChanged("LDAPDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LoginGuid {
            get {
                return this.LoginGuidField;
            }
            set {
                if ((this.LoginGuidField.Equals(value) != true)) {
                    this.LoginGuidField = value;
                    this.RaisePropertyChanged("LoginGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginId {
            get {
                return this.LoginIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIdField, value) != true)) {
                    this.LoginIdField = value;
                    this.RaisePropertyChanged("LoginId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AzManLoginHelper.AzManLoginSvcRef.LoginStatusEnum Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeOut {
            get {
                return this.TimeOutField;
            }
            set {
                if ((this.TimeOutField.Equals(value) != true)) {
                    this.TimeOutField = value;
                    this.RaisePropertyChanged("TimeOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginStatusEnum", Namespace="http://schemas.datacontract.org/2004/07/AzManLoginWebServices")]
    public enum LoginStatusEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoggedIn = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoggedOut = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AzManLoginSvcRef.ILoginService")]
    public interface ILoginService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Test", ReplyAction="http://tempuri.org/ILoginService/TestResponse")]
        AzManLoginHelper.AzManLoginSvcRef.TestResponse Test(AzManLoginHelper.AzManLoginSvcRef.TestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/Test", ReplyAction="http://tempuri.org/ILoginService/TestResponse")]
        System.IAsyncResult BeginTest(AzManLoginHelper.AzManLoginSvcRef.TestRequest request, System.AsyncCallback callback, object asyncState);
        
        AzManLoginHelper.AzManLoginSvcRef.TestResponse EndTest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/StartLogin", ReplyAction="http://tempuri.org/ILoginService/StartLoginResponse")]
        AzManLoginHelper.AzManLoginSvcRef.StartLoginResponse StartLogin(AzManLoginHelper.AzManLoginSvcRef.StartLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/StartLogin", ReplyAction="http://tempuri.org/ILoginService/StartLoginResponse")]
        System.IAsyncResult BeginStartLogin(AzManLoginHelper.AzManLoginSvcRef.StartLoginRequest request, System.AsyncCallback callback, object asyncState);
        
        AzManLoginHelper.AzManLoginSvcRef.StartLoginResponse EndStartLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/StartLoginEnc", ReplyAction="http://tempuri.org/ILoginService/StartLoginEncResponse")]
        AzManLoginHelper.AzManLoginSvcRef.StartLoginEncResponse StartLoginEnc(AzManLoginHelper.AzManLoginSvcRef.StartLoginEncRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/StartLoginEnc", ReplyAction="http://tempuri.org/ILoginService/StartLoginEncResponse")]
        System.IAsyncResult BeginStartLoginEnc(AzManLoginHelper.AzManLoginSvcRef.StartLoginEncRequest request, System.AsyncCallback callback, object asyncState);
        
        AzManLoginHelper.AzManLoginSvcRef.StartLoginEncResponse EndStartLoginEnc(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CreateLogin", ReplyAction="http://tempuri.org/ILoginService/CreateLoginResponse")]
        AzManLoginHelper.AzManLoginSvcRef.CreateLoginResponse CreateLogin(AzManLoginHelper.AzManLoginSvcRef.CreateLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/CreateLogin", ReplyAction="http://tempuri.org/ILoginService/CreateLoginResponse")]
        System.IAsyncResult BeginCreateLogin(AzManLoginHelper.AzManLoginSvcRef.CreateLoginRequest request, System.AsyncCallback callback, object asyncState);
        
        AzManLoginHelper.AzManLoginSvcRef.CreateLoginResponse EndCreateLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetLogin", ReplyAction="http://tempuri.org/ILoginService/GetLoginResponse")]
        AzManLoginHelper.AzManLoginSvcRef.GetLoginResponse GetLogin(AzManLoginHelper.AzManLoginSvcRef.GetLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/GetLogin", ReplyAction="http://tempuri.org/ILoginService/GetLoginResponse")]
        System.IAsyncResult BeginGetLogin(AzManLoginHelper.AzManLoginSvcRef.GetLoginRequest request, System.AsyncCallback callback, object asyncState);
        
        AzManLoginHelper.AzManLoginSvcRef.GetLoginResponse EndGetLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetLoginByIdAndUser", ReplyAction="http://tempuri.org/ILoginService/GetLoginByIdAndUserResponse")]
        AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserResponse GetLoginByIdAndUser(AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/GetLoginByIdAndUser", ReplyAction="http://tempuri.org/ILoginService/GetLoginByIdAndUserResponse")]
        System.IAsyncResult BeginGetLoginByIdAndUser(AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserRequest request, System.AsyncCallback callback, object asyncState);
        
        AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserResponse EndGetLoginByIdAndUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/RevalidateLogin", ReplyAction="http://tempuri.org/ILoginService/RevalidateLoginResponse")]
        AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginResponse RevalidateLogin(AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/RevalidateLogin", ReplyAction="http://tempuri.org/ILoginService/RevalidateLoginResponse")]
        System.IAsyncResult BeginRevalidateLogin(AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginRequest request, System.AsyncCallback callback, object asyncState);
        
        AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginResponse EndRevalidateLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/StartLogOut", ReplyAction="http://tempuri.org/ILoginService/StartLogOutResponse")]
        AzManLoginHelper.AzManLoginSvcRef.StartLogOutResponse StartLogOut(AzManLoginHelper.AzManLoginSvcRef.StartLogOutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/StartLogOut", ReplyAction="http://tempuri.org/ILoginService/StartLogOutResponse")]
        System.IAsyncResult BeginStartLogOut(AzManLoginHelper.AzManLoginSvcRef.StartLogOutRequest request, System.AsyncCallback callback, object asyncState);
        
        AzManLoginHelper.AzManLoginSvcRef.StartLogOutResponse EndStartLogOut(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CheckLoginAccess", ReplyAction="http://tempuri.org/ILoginService/CheckLoginAccessResponse")]
        AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessResponse CheckLoginAccess(AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/CheckLoginAccess", ReplyAction="http://tempuri.org/ILoginService/CheckLoginAccessResponse")]
        System.IAsyncResult BeginCheckLoginAccess(AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessRequest request, System.AsyncCallback callback, object asyncState);
        
        AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessResponse EndCheckLoginAccess(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CheckLoginStatusAndAuthorization", ReplyAction="http://tempuri.org/ILoginService/CheckLoginStatusAndAuthorizationResponse")]
        AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationResponse CheckLoginStatusAndAuthorization(AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/CheckLoginStatusAndAuthorization", ReplyAction="http://tempuri.org/ILoginService/CheckLoginStatusAndAuthorizationResponse")]
        System.IAsyncResult BeginCheckLoginStatusAndAuthorization(AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationRequest request, System.AsyncCallback callback, object asyncState);
        
        AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationResponse EndCheckLoginStatusAndAuthorization(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ChangePwd", ReplyAction="http://tempuri.org/ILoginService/ChangePwdResponse")]
        AzManLoginHelper.AzManLoginSvcRef.ChangePwdResponse ChangePwd(AzManLoginHelper.AzManLoginSvcRef.ChangePwdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/ChangePwd", ReplyAction="http://tempuri.org/ILoginService/ChangePwdResponse")]
        System.IAsyncResult BeginChangePwd(AzManLoginHelper.AzManLoginSvcRef.ChangePwdRequest request, System.AsyncCallback callback, object asyncState);
        
        AzManLoginHelper.AzManLoginSvcRef.ChangePwdResponse EndChangePwd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ChangePwdEx", ReplyAction="http://tempuri.org/ILoginService/ChangePwdExResponse")]
        AzManLoginHelper.AzManLoginSvcRef.ChangePwdExResponse ChangePwdEx(AzManLoginHelper.AzManLoginSvcRef.ChangePwdExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginService/ChangePwdEx", ReplyAction="http://tempuri.org/ILoginService/ChangePwdExResponse")]
        System.IAsyncResult BeginChangePwdEx(AzManLoginHelper.AzManLoginSvcRef.ChangePwdExRequest request, System.AsyncCallback callback, object asyncState);
        
        AzManLoginHelper.AzManLoginSvcRef.ChangePwdExResponse EndChangePwdEx(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Test", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string input;
        
        public TestRequest() {
        }
        
        public TestRequest(string input) {
            this.input = input;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool TestResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string output;
        
        public TestResponse() {
        }
        
        public TestResponse(bool TestResult, string output) {
            this.TestResult = TestResult;
            this.output = output;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartLogin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StartLoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string pwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string appName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string store;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string app;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string requiredItem;
        
        public StartLoginRequest() {
        }
        
        public StartLoginRequest(string userName, string pwd, string appName, string store, string app, string requiredItem) {
            this.userName = userName;
            this.pwd = pwd;
            this.appName = appName;
            this.store = store;
            this.app = app;
            this.requiredItem = requiredItem;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartLoginResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StartLoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool StartLoginResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AzManLoginHelper.AzManLoginSvcRef.DBUser user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public AzManLoginHelper.AzManLoginSvcRef.AuthorizationType aut;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginInfo login;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string attributeString;
        
        public StartLoginResponse() {
        }
        
        public StartLoginResponse(bool StartLoginResult, AzManLoginHelper.AzManLoginSvcRef.DBUser user, AzManLoginHelper.AzManLoginSvcRef.AuthorizationType aut, AzManLoginHelper.AzManLoginSvcRef.LoginInfo login, string attributeString) {
            this.StartLoginResult = StartLoginResult;
            this.user = user;
            this.aut = aut;
            this.login = login;
            this.attributeString = attributeString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartLoginEnc", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StartLoginEncRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string encodedUserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string appName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string store;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string app;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string requiredItem;
        
        public StartLoginEncRequest() {
        }
        
        public StartLoginEncRequest(string encodedUserName, string appName, string store, string app, string requiredItem) {
            this.encodedUserName = encodedUserName;
            this.appName = appName;
            this.store = store;
            this.app = app;
            this.requiredItem = requiredItem;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartLoginEncResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StartLoginEncResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool StartLoginEncResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AzManLoginHelper.AzManLoginSvcRef.DBUser user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public AzManLoginHelper.AzManLoginSvcRef.AuthorizationType aut;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginInfo login;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string attributeString;
        
        public StartLoginEncResponse() {
        }
        
        public StartLoginEncResponse(bool StartLoginEncResult, AzManLoginHelper.AzManLoginSvcRef.DBUser user, AzManLoginHelper.AzManLoginSvcRef.AuthorizationType aut, AzManLoginHelper.AzManLoginSvcRef.LoginInfo login, string attributeString) {
            this.StartLoginEncResult = StartLoginEncResult;
            this.user = user;
            this.aut = aut;
            this.login = login;
            this.attributeString = attributeString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateLogin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateLoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string clientApplication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string azManStore;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string azManApplication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string azManItem;
        
        public CreateLoginRequest() {
        }
        
        public CreateLoginRequest(string userName, string password, string clientApplication, string azManStore, string azManApplication, string azManItem) {
            this.userName = userName;
            this.password = password;
            this.clientApplication = clientApplication;
            this.azManStore = azManStore;
            this.azManApplication = azManApplication;
            this.azManItem = azManItem;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateLoginResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateLoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CreateLoginResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AzManLoginHelper.AzManLoginSvcRef.DBUser dbUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginInfo loginInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public AzManLoginHelper.AzManLoginSvcRef.AuthorizationType authorizationType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string outputString;
        
        public CreateLoginResponse() {
        }
        
        public CreateLoginResponse(bool CreateLoginResult, AzManLoginHelper.AzManLoginSvcRef.DBUser dbUser, AzManLoginHelper.AzManLoginSvcRef.LoginInfo loginInfo, AzManLoginHelper.AzManLoginSvcRef.AuthorizationType authorizationType, string outputString) {
            this.CreateLoginResult = CreateLoginResult;
            this.dbUser = dbUser;
            this.loginInfo = loginInfo;
            this.authorizationType = authorizationType;
            this.outputString = outputString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLogin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string loginId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string appName;
        
        public GetLoginRequest() {
        }
        
        public GetLoginRequest(string loginId, string userName, string appName) {
            this.loginId = loginId;
            this.userName = userName;
            this.appName = appName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLoginResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetLoginResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AzManLoginHelper.AzManLoginSvcRef.DBUser user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginInfo login;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string attributeString;
        
        public GetLoginResponse() {
        }
        
        public GetLoginResponse(bool GetLoginResult, AzManLoginHelper.AzManLoginSvcRef.DBUser user, AzManLoginHelper.AzManLoginSvcRef.LoginInfo login, string attributeString) {
            this.GetLoginResult = GetLoginResult;
            this.user = user;
            this.login = login;
            this.attributeString = attributeString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLoginByIdAndUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLoginByIdAndUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string loginId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string userName;
        
        public GetLoginByIdAndUserRequest() {
        }
        
        public GetLoginByIdAndUserRequest(string loginId, string userName) {
            this.loginId = loginId;
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLoginByIdAndUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLoginByIdAndUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetLoginByIdAndUserResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AzManLoginHelper.AzManLoginSvcRef.DBUser dbUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginInfo loginInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string outputString;
        
        public GetLoginByIdAndUserResponse() {
        }
        
        public GetLoginByIdAndUserResponse(bool GetLoginByIdAndUserResult, AzManLoginHelper.AzManLoginSvcRef.DBUser dbUser, AzManLoginHelper.AzManLoginSvcRef.LoginInfo loginInfo, string outputString) {
            this.GetLoginByIdAndUserResult = GetLoginByIdAndUserResult;
            this.dbUser = dbUser;
            this.loginInfo = loginInfo;
            this.outputString = outputString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RevalidateLogin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RevalidateLoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string loginId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string pwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string appName;
        
        public RevalidateLoginRequest() {
        }
        
        public RevalidateLoginRequest(string loginId, string userName, string pwd, string appName) {
            this.loginId = loginId;
            this.userName = userName;
            this.pwd = pwd;
            this.appName = appName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RevalidateLoginResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RevalidateLoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool RevalidateLoginResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AzManLoginHelper.AzManLoginSvcRef.DBUser user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginInfo login;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string attributeString;
        
        public RevalidateLoginResponse() {
        }
        
        public RevalidateLoginResponse(bool RevalidateLoginResult, AzManLoginHelper.AzManLoginSvcRef.DBUser user, AzManLoginHelper.AzManLoginSvcRef.LoginInfo login, string attributeString) {
            this.RevalidateLoginResult = RevalidateLoginResult;
            this.user = user;
            this.login = login;
            this.attributeString = attributeString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartLogOut", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StartLogOutRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginInfo login;
        
        public StartLogOutRequest() {
        }
        
        public StartLogOutRequest(AzManLoginHelper.AzManLoginSvcRef.LoginInfo login) {
            this.login = login;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartLogOutResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StartLogOutResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool StartLogOutResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string attributeString;
        
        public StartLogOutResponse() {
        }
        
        public StartLogOutResponse(bool StartLogOutResult, string attributeString) {
            this.StartLogOutResult = StartLogOutResult;
            this.attributeString = attributeString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckLoginAccess", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckLoginAccessRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string store;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string app;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string item;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginInfo loginInfo;
        
        public CheckLoginAccessRequest() {
        }
        
        public CheckLoginAccessRequest(string store, string app, string item, AzManLoginHelper.AzManLoginSvcRef.LoginInfo loginInfo) {
            this.store = store;
            this.app = app;
            this.item = item;
            this.loginInfo = loginInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckLoginAccessResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckLoginAccessResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CheckLoginAccessResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginStatusEnum loginStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public AzManLoginHelper.AzManLoginSvcRef.AuthorizationType aut;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string attributeString;
        
        public CheckLoginAccessResponse() {
        }
        
        public CheckLoginAccessResponse(bool CheckLoginAccessResult, AzManLoginHelper.AzManLoginSvcRef.LoginStatusEnum loginStatus, AzManLoginHelper.AzManLoginSvcRef.AuthorizationType aut, string attributeString) {
            this.CheckLoginAccessResult = CheckLoginAccessResult;
            this.loginStatus = loginStatus;
            this.aut = aut;
            this.attributeString = attributeString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckLoginStatusAndAuthorization", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckLoginStatusAndAuthorizationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string azManStore;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string azManApplication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string azManItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginInfo loginInfo;
        
        public CheckLoginStatusAndAuthorizationRequest() {
        }
        
        public CheckLoginStatusAndAuthorizationRequest(string azManStore, string azManApplication, string azManItem, AzManLoginHelper.AzManLoginSvcRef.LoginInfo loginInfo) {
            this.azManStore = azManStore;
            this.azManApplication = azManApplication;
            this.azManItem = azManItem;
            this.loginInfo = loginInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckLoginStatusAndAuthorizationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckLoginStatusAndAuthorizationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CheckLoginStatusAndAuthorizationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginStatusEnum loginStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public AzManLoginHelper.AzManLoginSvcRef.AuthorizationType authorizationType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string outputString;
        
        public CheckLoginStatusAndAuthorizationResponse() {
        }
        
        public CheckLoginStatusAndAuthorizationResponse(bool CheckLoginStatusAndAuthorizationResult, AzManLoginHelper.AzManLoginSvcRef.LoginStatusEnum loginStatus, AzManLoginHelper.AzManLoginSvcRef.AuthorizationType authorizationType, string outputString) {
            this.CheckLoginStatusAndAuthorizationResult = CheckLoginStatusAndAuthorizationResult;
            this.loginStatus = loginStatus;
            this.authorizationType = authorizationType;
            this.outputString = outputString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePwd", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ChangePwdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginInfo login;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string current;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string renewed;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string confirmation;
        
        public ChangePwdRequest() {
        }
        
        public ChangePwdRequest(AzManLoginHelper.AzManLoginSvcRef.LoginInfo login, string current, string renewed, string confirmation) {
            this.login = login;
            this.current = current;
            this.renewed = renewed;
            this.confirmation = confirmation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePwdResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ChangePwdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool ChangePwdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string statusMessages;
        
        public ChangePwdResponse() {
        }
        
        public ChangePwdResponse(bool ChangePwdResult, string statusMessages) {
            this.ChangePwdResult = ChangePwdResult;
            this.statusMessages = statusMessages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePwdEx", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ChangePwdExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AzManLoginHelper.AzManLoginSvcRef.LoginInfo login;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string current;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string renewed;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string confirmation;
        
        public ChangePwdExRequest() {
        }
        
        public ChangePwdExRequest(AzManLoginHelper.AzManLoginSvcRef.LoginInfo login, string current, string renewed, string confirmation) {
            this.login = login;
            this.current = current;
            this.renewed = renewed;
            this.confirmation = confirmation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePwdExResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ChangePwdExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool ChangePwdExResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string statusType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string statusMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string statusTrace;
        
        public ChangePwdExResponse() {
        }
        
        public ChangePwdExResponse(bool ChangePwdExResult, string statusType, string statusMessage, string statusTrace) {
            this.ChangePwdExResult = ChangePwdExResult;
            this.statusType = statusType;
            this.statusMessage = statusMessage;
            this.statusTrace = statusTrace;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServiceChannel : AzManLoginHelper.AzManLoginSvcRef.ILoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.TestResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AzManLoginHelper.AzManLoginSvcRef.TestResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StartLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.StartLoginResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AzManLoginHelper.AzManLoginSvcRef.StartLoginResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartLoginEncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StartLoginEncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.StartLoginEncResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AzManLoginHelper.AzManLoginSvcRef.StartLoginEncResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.CreateLoginResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AzManLoginHelper.AzManLoginSvcRef.CreateLoginResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.GetLoginResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AzManLoginHelper.AzManLoginSvcRef.GetLoginResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoginByIdAndUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoginByIdAndUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RevalidateLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RevalidateLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartLogOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StartLogOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.StartLogOutResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AzManLoginHelper.AzManLoginSvcRef.StartLogOutResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckLoginAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckLoginAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckLoginStatusAndAuthorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckLoginStatusAndAuthorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangePwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangePwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.ChangePwdResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AzManLoginHelper.AzManLoginSvcRef.ChangePwdResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangePwdExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangePwdExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.ChangePwdExResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AzManLoginHelper.AzManLoginSvcRef.ChangePwdExResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<AzManLoginHelper.AzManLoginSvcRef.ILoginService>, AzManLoginHelper.AzManLoginSvcRef.ILoginService {
        
        private BeginOperationDelegate onBeginTestDelegate;
        
        private EndOperationDelegate onEndTestDelegate;
        
        private System.Threading.SendOrPostCallback onTestCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartLoginDelegate;
        
        private EndOperationDelegate onEndStartLoginDelegate;
        
        private System.Threading.SendOrPostCallback onStartLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartLoginEncDelegate;
        
        private EndOperationDelegate onEndStartLoginEncDelegate;
        
        private System.Threading.SendOrPostCallback onStartLoginEncCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateLoginDelegate;
        
        private EndOperationDelegate onEndCreateLoginDelegate;
        
        private System.Threading.SendOrPostCallback onCreateLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoginDelegate;
        
        private EndOperationDelegate onEndGetLoginDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoginByIdAndUserDelegate;
        
        private EndOperationDelegate onEndGetLoginByIdAndUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoginByIdAndUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginRevalidateLoginDelegate;
        
        private EndOperationDelegate onEndRevalidateLoginDelegate;
        
        private System.Threading.SendOrPostCallback onRevalidateLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartLogOutDelegate;
        
        private EndOperationDelegate onEndStartLogOutDelegate;
        
        private System.Threading.SendOrPostCallback onStartLogOutCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckLoginAccessDelegate;
        
        private EndOperationDelegate onEndCheckLoginAccessDelegate;
        
        private System.Threading.SendOrPostCallback onCheckLoginAccessCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckLoginStatusAndAuthorizationDelegate;
        
        private EndOperationDelegate onEndCheckLoginStatusAndAuthorizationDelegate;
        
        private System.Threading.SendOrPostCallback onCheckLoginStatusAndAuthorizationCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangePwdDelegate;
        
        private EndOperationDelegate onEndChangePwdDelegate;
        
        private System.Threading.SendOrPostCallback onChangePwdCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangePwdExDelegate;
        
        private EndOperationDelegate onEndChangePwdExDelegate;
        
        private System.Threading.SendOrPostCallback onChangePwdExCompletedDelegate;
        
        public LoginServiceClient() {
        }
        
        public LoginServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<TestCompletedEventArgs> TestCompleted;
        
        public event System.EventHandler<StartLoginCompletedEventArgs> StartLoginCompleted;
        
        public event System.EventHandler<StartLoginEncCompletedEventArgs> StartLoginEncCompleted;
        
        public event System.EventHandler<CreateLoginCompletedEventArgs> CreateLoginCompleted;
        
        public event System.EventHandler<GetLoginCompletedEventArgs> GetLoginCompleted;
        
        public event System.EventHandler<GetLoginByIdAndUserCompletedEventArgs> GetLoginByIdAndUserCompleted;
        
        public event System.EventHandler<RevalidateLoginCompletedEventArgs> RevalidateLoginCompleted;
        
        public event System.EventHandler<StartLogOutCompletedEventArgs> StartLogOutCompleted;
        
        public event System.EventHandler<CheckLoginAccessCompletedEventArgs> CheckLoginAccessCompleted;
        
        public event System.EventHandler<CheckLoginStatusAndAuthorizationCompletedEventArgs> CheckLoginStatusAndAuthorizationCompleted;
        
        public event System.EventHandler<ChangePwdCompletedEventArgs> ChangePwdCompleted;
        
        public event System.EventHandler<ChangePwdExCompletedEventArgs> ChangePwdExCompleted;
        
        public AzManLoginHelper.AzManLoginSvcRef.TestResponse Test(AzManLoginHelper.AzManLoginSvcRef.TestRequest request) {
            return base.Channel.Test(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTest(AzManLoginHelper.AzManLoginSvcRef.TestRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTest(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AzManLoginHelper.AzManLoginSvcRef.TestResponse EndTest(System.IAsyncResult result) {
            return base.Channel.EndTest(result);
        }
        
        private System.IAsyncResult OnBeginTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AzManLoginHelper.AzManLoginSvcRef.TestRequest request = ((AzManLoginHelper.AzManLoginSvcRef.TestRequest)(inValues[0]));
            return this.BeginTest(request, callback, asyncState);
        }
        
        private object[] OnEndTest(System.IAsyncResult result) {
            AzManLoginHelper.AzManLoginSvcRef.TestResponse retVal = this.EndTest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestCompleted(object state) {
            if ((this.TestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestCompleted(this, new TestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestAsync(AzManLoginHelper.AzManLoginSvcRef.TestRequest request) {
            this.TestAsync(request, null);
        }
        
        public void TestAsync(AzManLoginHelper.AzManLoginSvcRef.TestRequest request, object userState) {
            if ((this.onBeginTestDelegate == null)) {
                this.onBeginTestDelegate = new BeginOperationDelegate(this.OnBeginTest);
            }
            if ((this.onEndTestDelegate == null)) {
                this.onEndTestDelegate = new EndOperationDelegate(this.OnEndTest);
            }
            if ((this.onTestCompletedDelegate == null)) {
                this.onTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestCompleted);
            }
            base.InvokeAsync(this.onBeginTestDelegate, new object[] {
                        request}, this.onEndTestDelegate, this.onTestCompletedDelegate, userState);
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.StartLoginResponse StartLogin(AzManLoginHelper.AzManLoginSvcRef.StartLoginRequest request) {
            return base.Channel.StartLogin(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStartLogin(AzManLoginHelper.AzManLoginSvcRef.StartLoginRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AzManLoginHelper.AzManLoginSvcRef.StartLoginResponse EndStartLogin(System.IAsyncResult result) {
            return base.Channel.EndStartLogin(result);
        }
        
        private System.IAsyncResult OnBeginStartLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AzManLoginHelper.AzManLoginSvcRef.StartLoginRequest request = ((AzManLoginHelper.AzManLoginSvcRef.StartLoginRequest)(inValues[0]));
            return this.BeginStartLogin(request, callback, asyncState);
        }
        
        private object[] OnEndStartLogin(System.IAsyncResult result) {
            AzManLoginHelper.AzManLoginSvcRef.StartLoginResponse retVal = this.EndStartLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStartLoginCompleted(object state) {
            if ((this.StartLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartLoginCompleted(this, new StartLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartLoginAsync(AzManLoginHelper.AzManLoginSvcRef.StartLoginRequest request) {
            this.StartLoginAsync(request, null);
        }
        
        public void StartLoginAsync(AzManLoginHelper.AzManLoginSvcRef.StartLoginRequest request, object userState) {
            if ((this.onBeginStartLoginDelegate == null)) {
                this.onBeginStartLoginDelegate = new BeginOperationDelegate(this.OnBeginStartLogin);
            }
            if ((this.onEndStartLoginDelegate == null)) {
                this.onEndStartLoginDelegate = new EndOperationDelegate(this.OnEndStartLogin);
            }
            if ((this.onStartLoginCompletedDelegate == null)) {
                this.onStartLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartLoginCompleted);
            }
            base.InvokeAsync(this.onBeginStartLoginDelegate, new object[] {
                        request}, this.onEndStartLoginDelegate, this.onStartLoginCompletedDelegate, userState);
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.StartLoginEncResponse StartLoginEnc(AzManLoginHelper.AzManLoginSvcRef.StartLoginEncRequest request) {
            return base.Channel.StartLoginEnc(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStartLoginEnc(AzManLoginHelper.AzManLoginSvcRef.StartLoginEncRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartLoginEnc(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AzManLoginHelper.AzManLoginSvcRef.StartLoginEncResponse EndStartLoginEnc(System.IAsyncResult result) {
            return base.Channel.EndStartLoginEnc(result);
        }
        
        private System.IAsyncResult OnBeginStartLoginEnc(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AzManLoginHelper.AzManLoginSvcRef.StartLoginEncRequest request = ((AzManLoginHelper.AzManLoginSvcRef.StartLoginEncRequest)(inValues[0]));
            return this.BeginStartLoginEnc(request, callback, asyncState);
        }
        
        private object[] OnEndStartLoginEnc(System.IAsyncResult result) {
            AzManLoginHelper.AzManLoginSvcRef.StartLoginEncResponse retVal = this.EndStartLoginEnc(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStartLoginEncCompleted(object state) {
            if ((this.StartLoginEncCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartLoginEncCompleted(this, new StartLoginEncCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartLoginEncAsync(AzManLoginHelper.AzManLoginSvcRef.StartLoginEncRequest request) {
            this.StartLoginEncAsync(request, null);
        }
        
        public void StartLoginEncAsync(AzManLoginHelper.AzManLoginSvcRef.StartLoginEncRequest request, object userState) {
            if ((this.onBeginStartLoginEncDelegate == null)) {
                this.onBeginStartLoginEncDelegate = new BeginOperationDelegate(this.OnBeginStartLoginEnc);
            }
            if ((this.onEndStartLoginEncDelegate == null)) {
                this.onEndStartLoginEncDelegate = new EndOperationDelegate(this.OnEndStartLoginEnc);
            }
            if ((this.onStartLoginEncCompletedDelegate == null)) {
                this.onStartLoginEncCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartLoginEncCompleted);
            }
            base.InvokeAsync(this.onBeginStartLoginEncDelegate, new object[] {
                        request}, this.onEndStartLoginEncDelegate, this.onStartLoginEncCompletedDelegate, userState);
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.CreateLoginResponse CreateLogin(AzManLoginHelper.AzManLoginSvcRef.CreateLoginRequest request) {
            return base.Channel.CreateLogin(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateLogin(AzManLoginHelper.AzManLoginSvcRef.CreateLoginRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AzManLoginHelper.AzManLoginSvcRef.CreateLoginResponse EndCreateLogin(System.IAsyncResult result) {
            return base.Channel.EndCreateLogin(result);
        }
        
        private System.IAsyncResult OnBeginCreateLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AzManLoginHelper.AzManLoginSvcRef.CreateLoginRequest request = ((AzManLoginHelper.AzManLoginSvcRef.CreateLoginRequest)(inValues[0]));
            return this.BeginCreateLogin(request, callback, asyncState);
        }
        
        private object[] OnEndCreateLogin(System.IAsyncResult result) {
            AzManLoginHelper.AzManLoginSvcRef.CreateLoginResponse retVal = this.EndCreateLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateLoginCompleted(object state) {
            if ((this.CreateLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateLoginCompleted(this, new CreateLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateLoginAsync(AzManLoginHelper.AzManLoginSvcRef.CreateLoginRequest request) {
            this.CreateLoginAsync(request, null);
        }
        
        public void CreateLoginAsync(AzManLoginHelper.AzManLoginSvcRef.CreateLoginRequest request, object userState) {
            if ((this.onBeginCreateLoginDelegate == null)) {
                this.onBeginCreateLoginDelegate = new BeginOperationDelegate(this.OnBeginCreateLogin);
            }
            if ((this.onEndCreateLoginDelegate == null)) {
                this.onEndCreateLoginDelegate = new EndOperationDelegate(this.OnEndCreateLogin);
            }
            if ((this.onCreateLoginCompletedDelegate == null)) {
                this.onCreateLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateLoginCompleted);
            }
            base.InvokeAsync(this.onBeginCreateLoginDelegate, new object[] {
                        request}, this.onEndCreateLoginDelegate, this.onCreateLoginCompletedDelegate, userState);
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.GetLoginResponse GetLogin(AzManLoginHelper.AzManLoginSvcRef.GetLoginRequest request) {
            return base.Channel.GetLogin(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLogin(AzManLoginHelper.AzManLoginSvcRef.GetLoginRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AzManLoginHelper.AzManLoginSvcRef.GetLoginResponse EndGetLogin(System.IAsyncResult result) {
            return base.Channel.EndGetLogin(result);
        }
        
        private System.IAsyncResult OnBeginGetLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AzManLoginHelper.AzManLoginSvcRef.GetLoginRequest request = ((AzManLoginHelper.AzManLoginSvcRef.GetLoginRequest)(inValues[0]));
            return this.BeginGetLogin(request, callback, asyncState);
        }
        
        private object[] OnEndGetLogin(System.IAsyncResult result) {
            AzManLoginHelper.AzManLoginSvcRef.GetLoginResponse retVal = this.EndGetLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLoginCompleted(object state) {
            if ((this.GetLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoginCompleted(this, new GetLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoginAsync(AzManLoginHelper.AzManLoginSvcRef.GetLoginRequest request) {
            this.GetLoginAsync(request, null);
        }
        
        public void GetLoginAsync(AzManLoginHelper.AzManLoginSvcRef.GetLoginRequest request, object userState) {
            if ((this.onBeginGetLoginDelegate == null)) {
                this.onBeginGetLoginDelegate = new BeginOperationDelegate(this.OnBeginGetLogin);
            }
            if ((this.onEndGetLoginDelegate == null)) {
                this.onEndGetLoginDelegate = new EndOperationDelegate(this.OnEndGetLogin);
            }
            if ((this.onGetLoginCompletedDelegate == null)) {
                this.onGetLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoginCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoginDelegate, new object[] {
                        request}, this.onEndGetLoginDelegate, this.onGetLoginCompletedDelegate, userState);
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserResponse GetLoginByIdAndUser(AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserRequest request) {
            return base.Channel.GetLoginByIdAndUser(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLoginByIdAndUser(AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLoginByIdAndUser(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserResponse EndGetLoginByIdAndUser(System.IAsyncResult result) {
            return base.Channel.EndGetLoginByIdAndUser(result);
        }
        
        private System.IAsyncResult OnBeginGetLoginByIdAndUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserRequest request = ((AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserRequest)(inValues[0]));
            return this.BeginGetLoginByIdAndUser(request, callback, asyncState);
        }
        
        private object[] OnEndGetLoginByIdAndUser(System.IAsyncResult result) {
            AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserResponse retVal = this.EndGetLoginByIdAndUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLoginByIdAndUserCompleted(object state) {
            if ((this.GetLoginByIdAndUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoginByIdAndUserCompleted(this, new GetLoginByIdAndUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoginByIdAndUserAsync(AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserRequest request) {
            this.GetLoginByIdAndUserAsync(request, null);
        }
        
        public void GetLoginByIdAndUserAsync(AzManLoginHelper.AzManLoginSvcRef.GetLoginByIdAndUserRequest request, object userState) {
            if ((this.onBeginGetLoginByIdAndUserDelegate == null)) {
                this.onBeginGetLoginByIdAndUserDelegate = new BeginOperationDelegate(this.OnBeginGetLoginByIdAndUser);
            }
            if ((this.onEndGetLoginByIdAndUserDelegate == null)) {
                this.onEndGetLoginByIdAndUserDelegate = new EndOperationDelegate(this.OnEndGetLoginByIdAndUser);
            }
            if ((this.onGetLoginByIdAndUserCompletedDelegate == null)) {
                this.onGetLoginByIdAndUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoginByIdAndUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoginByIdAndUserDelegate, new object[] {
                        request}, this.onEndGetLoginByIdAndUserDelegate, this.onGetLoginByIdAndUserCompletedDelegate, userState);
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginResponse RevalidateLogin(AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginRequest request) {
            return base.Channel.RevalidateLogin(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRevalidateLogin(AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRevalidateLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginResponse EndRevalidateLogin(System.IAsyncResult result) {
            return base.Channel.EndRevalidateLogin(result);
        }
        
        private System.IAsyncResult OnBeginRevalidateLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginRequest request = ((AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginRequest)(inValues[0]));
            return this.BeginRevalidateLogin(request, callback, asyncState);
        }
        
        private object[] OnEndRevalidateLogin(System.IAsyncResult result) {
            AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginResponse retVal = this.EndRevalidateLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRevalidateLoginCompleted(object state) {
            if ((this.RevalidateLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RevalidateLoginCompleted(this, new RevalidateLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RevalidateLoginAsync(AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginRequest request) {
            this.RevalidateLoginAsync(request, null);
        }
        
        public void RevalidateLoginAsync(AzManLoginHelper.AzManLoginSvcRef.RevalidateLoginRequest request, object userState) {
            if ((this.onBeginRevalidateLoginDelegate == null)) {
                this.onBeginRevalidateLoginDelegate = new BeginOperationDelegate(this.OnBeginRevalidateLogin);
            }
            if ((this.onEndRevalidateLoginDelegate == null)) {
                this.onEndRevalidateLoginDelegate = new EndOperationDelegate(this.OnEndRevalidateLogin);
            }
            if ((this.onRevalidateLoginCompletedDelegate == null)) {
                this.onRevalidateLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRevalidateLoginCompleted);
            }
            base.InvokeAsync(this.onBeginRevalidateLoginDelegate, new object[] {
                        request}, this.onEndRevalidateLoginDelegate, this.onRevalidateLoginCompletedDelegate, userState);
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.StartLogOutResponse StartLogOut(AzManLoginHelper.AzManLoginSvcRef.StartLogOutRequest request) {
            return base.Channel.StartLogOut(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStartLogOut(AzManLoginHelper.AzManLoginSvcRef.StartLogOutRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartLogOut(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AzManLoginHelper.AzManLoginSvcRef.StartLogOutResponse EndStartLogOut(System.IAsyncResult result) {
            return base.Channel.EndStartLogOut(result);
        }
        
        private System.IAsyncResult OnBeginStartLogOut(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AzManLoginHelper.AzManLoginSvcRef.StartLogOutRequest request = ((AzManLoginHelper.AzManLoginSvcRef.StartLogOutRequest)(inValues[0]));
            return this.BeginStartLogOut(request, callback, asyncState);
        }
        
        private object[] OnEndStartLogOut(System.IAsyncResult result) {
            AzManLoginHelper.AzManLoginSvcRef.StartLogOutResponse retVal = this.EndStartLogOut(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStartLogOutCompleted(object state) {
            if ((this.StartLogOutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartLogOutCompleted(this, new StartLogOutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartLogOutAsync(AzManLoginHelper.AzManLoginSvcRef.StartLogOutRequest request) {
            this.StartLogOutAsync(request, null);
        }
        
        public void StartLogOutAsync(AzManLoginHelper.AzManLoginSvcRef.StartLogOutRequest request, object userState) {
            if ((this.onBeginStartLogOutDelegate == null)) {
                this.onBeginStartLogOutDelegate = new BeginOperationDelegate(this.OnBeginStartLogOut);
            }
            if ((this.onEndStartLogOutDelegate == null)) {
                this.onEndStartLogOutDelegate = new EndOperationDelegate(this.OnEndStartLogOut);
            }
            if ((this.onStartLogOutCompletedDelegate == null)) {
                this.onStartLogOutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartLogOutCompleted);
            }
            base.InvokeAsync(this.onBeginStartLogOutDelegate, new object[] {
                        request}, this.onEndStartLogOutDelegate, this.onStartLogOutCompletedDelegate, userState);
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessResponse CheckLoginAccess(AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessRequest request) {
            return base.Channel.CheckLoginAccess(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckLoginAccess(AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckLoginAccess(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessResponse EndCheckLoginAccess(System.IAsyncResult result) {
            return base.Channel.EndCheckLoginAccess(result);
        }
        
        private System.IAsyncResult OnBeginCheckLoginAccess(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessRequest request = ((AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessRequest)(inValues[0]));
            return this.BeginCheckLoginAccess(request, callback, asyncState);
        }
        
        private object[] OnEndCheckLoginAccess(System.IAsyncResult result) {
            AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessResponse retVal = this.EndCheckLoginAccess(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckLoginAccessCompleted(object state) {
            if ((this.CheckLoginAccessCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckLoginAccessCompleted(this, new CheckLoginAccessCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckLoginAccessAsync(AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessRequest request) {
            this.CheckLoginAccessAsync(request, null);
        }
        
        public void CheckLoginAccessAsync(AzManLoginHelper.AzManLoginSvcRef.CheckLoginAccessRequest request, object userState) {
            if ((this.onBeginCheckLoginAccessDelegate == null)) {
                this.onBeginCheckLoginAccessDelegate = new BeginOperationDelegate(this.OnBeginCheckLoginAccess);
            }
            if ((this.onEndCheckLoginAccessDelegate == null)) {
                this.onEndCheckLoginAccessDelegate = new EndOperationDelegate(this.OnEndCheckLoginAccess);
            }
            if ((this.onCheckLoginAccessCompletedDelegate == null)) {
                this.onCheckLoginAccessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckLoginAccessCompleted);
            }
            base.InvokeAsync(this.onBeginCheckLoginAccessDelegate, new object[] {
                        request}, this.onEndCheckLoginAccessDelegate, this.onCheckLoginAccessCompletedDelegate, userState);
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationResponse CheckLoginStatusAndAuthorization(AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationRequest request) {
            return base.Channel.CheckLoginStatusAndAuthorization(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckLoginStatusAndAuthorization(AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckLoginStatusAndAuthorization(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationResponse EndCheckLoginStatusAndAuthorization(System.IAsyncResult result) {
            return base.Channel.EndCheckLoginStatusAndAuthorization(result);
        }
        
        private System.IAsyncResult OnBeginCheckLoginStatusAndAuthorization(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationRequest request = ((AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationRequest)(inValues[0]));
            return this.BeginCheckLoginStatusAndAuthorization(request, callback, asyncState);
        }
        
        private object[] OnEndCheckLoginStatusAndAuthorization(System.IAsyncResult result) {
            AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationResponse retVal = this.EndCheckLoginStatusAndAuthorization(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckLoginStatusAndAuthorizationCompleted(object state) {
            if ((this.CheckLoginStatusAndAuthorizationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckLoginStatusAndAuthorizationCompleted(this, new CheckLoginStatusAndAuthorizationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckLoginStatusAndAuthorizationAsync(AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationRequest request) {
            this.CheckLoginStatusAndAuthorizationAsync(request, null);
        }
        
        public void CheckLoginStatusAndAuthorizationAsync(AzManLoginHelper.AzManLoginSvcRef.CheckLoginStatusAndAuthorizationRequest request, object userState) {
            if ((this.onBeginCheckLoginStatusAndAuthorizationDelegate == null)) {
                this.onBeginCheckLoginStatusAndAuthorizationDelegate = new BeginOperationDelegate(this.OnBeginCheckLoginStatusAndAuthorization);
            }
            if ((this.onEndCheckLoginStatusAndAuthorizationDelegate == null)) {
                this.onEndCheckLoginStatusAndAuthorizationDelegate = new EndOperationDelegate(this.OnEndCheckLoginStatusAndAuthorization);
            }
            if ((this.onCheckLoginStatusAndAuthorizationCompletedDelegate == null)) {
                this.onCheckLoginStatusAndAuthorizationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckLoginStatusAndAuthorizationCompleted);
            }
            base.InvokeAsync(this.onBeginCheckLoginStatusAndAuthorizationDelegate, new object[] {
                        request}, this.onEndCheckLoginStatusAndAuthorizationDelegate, this.onCheckLoginStatusAndAuthorizationCompletedDelegate, userState);
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.ChangePwdResponse ChangePwd(AzManLoginHelper.AzManLoginSvcRef.ChangePwdRequest request) {
            return base.Channel.ChangePwd(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangePwd(AzManLoginHelper.AzManLoginSvcRef.ChangePwdRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangePwd(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AzManLoginHelper.AzManLoginSvcRef.ChangePwdResponse EndChangePwd(System.IAsyncResult result) {
            return base.Channel.EndChangePwd(result);
        }
        
        private System.IAsyncResult OnBeginChangePwd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AzManLoginHelper.AzManLoginSvcRef.ChangePwdRequest request = ((AzManLoginHelper.AzManLoginSvcRef.ChangePwdRequest)(inValues[0]));
            return this.BeginChangePwd(request, callback, asyncState);
        }
        
        private object[] OnEndChangePwd(System.IAsyncResult result) {
            AzManLoginHelper.AzManLoginSvcRef.ChangePwdResponse retVal = this.EndChangePwd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangePwdCompleted(object state) {
            if ((this.ChangePwdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangePwdCompleted(this, new ChangePwdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangePwdAsync(AzManLoginHelper.AzManLoginSvcRef.ChangePwdRequest request) {
            this.ChangePwdAsync(request, null);
        }
        
        public void ChangePwdAsync(AzManLoginHelper.AzManLoginSvcRef.ChangePwdRequest request, object userState) {
            if ((this.onBeginChangePwdDelegate == null)) {
                this.onBeginChangePwdDelegate = new BeginOperationDelegate(this.OnBeginChangePwd);
            }
            if ((this.onEndChangePwdDelegate == null)) {
                this.onEndChangePwdDelegate = new EndOperationDelegate(this.OnEndChangePwd);
            }
            if ((this.onChangePwdCompletedDelegate == null)) {
                this.onChangePwdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangePwdCompleted);
            }
            base.InvokeAsync(this.onBeginChangePwdDelegate, new object[] {
                        request}, this.onEndChangePwdDelegate, this.onChangePwdCompletedDelegate, userState);
        }
        
        public AzManLoginHelper.AzManLoginSvcRef.ChangePwdExResponse ChangePwdEx(AzManLoginHelper.AzManLoginSvcRef.ChangePwdExRequest request) {
            return base.Channel.ChangePwdEx(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangePwdEx(AzManLoginHelper.AzManLoginSvcRef.ChangePwdExRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangePwdEx(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AzManLoginHelper.AzManLoginSvcRef.ChangePwdExResponse EndChangePwdEx(System.IAsyncResult result) {
            return base.Channel.EndChangePwdEx(result);
        }
        
        private System.IAsyncResult OnBeginChangePwdEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AzManLoginHelper.AzManLoginSvcRef.ChangePwdExRequest request = ((AzManLoginHelper.AzManLoginSvcRef.ChangePwdExRequest)(inValues[0]));
            return this.BeginChangePwdEx(request, callback, asyncState);
        }
        
        private object[] OnEndChangePwdEx(System.IAsyncResult result) {
            AzManLoginHelper.AzManLoginSvcRef.ChangePwdExResponse retVal = this.EndChangePwdEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangePwdExCompleted(object state) {
            if ((this.ChangePwdExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangePwdExCompleted(this, new ChangePwdExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangePwdExAsync(AzManLoginHelper.AzManLoginSvcRef.ChangePwdExRequest request) {
            this.ChangePwdExAsync(request, null);
        }
        
        public void ChangePwdExAsync(AzManLoginHelper.AzManLoginSvcRef.ChangePwdExRequest request, object userState) {
            if ((this.onBeginChangePwdExDelegate == null)) {
                this.onBeginChangePwdExDelegate = new BeginOperationDelegate(this.OnBeginChangePwdEx);
            }
            if ((this.onEndChangePwdExDelegate == null)) {
                this.onEndChangePwdExDelegate = new EndOperationDelegate(this.OnEndChangePwdEx);
            }
            if ((this.onChangePwdExCompletedDelegate == null)) {
                this.onChangePwdExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangePwdExCompleted);
            }
            base.InvokeAsync(this.onBeginChangePwdExDelegate, new object[] {
                        request}, this.onEndChangePwdExDelegate, this.onChangePwdExCompletedDelegate, userState);
        }
    }
}
